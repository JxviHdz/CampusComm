{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joseg\\\\OneDrive\\\\Desktop\\\\CampusComm\\\\src\\\\SellerProfile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Profile.css';\nimport firebase from 'firebase/app';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Grid } from \"@material-ui/core\";\nimport HomeListingCard from \"./listingCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firestore = firebase.firestore();\nvar target, targetID, targetName, targetPhoto;\nvar listings = [];\nvar docsID = [];\n\nfunction SellerProfile() {\n  _s();\n\n  target = useLocation().state[0].targetUserName;\n  targetID = useLocation().state[0].targetUserID;\n  var [targetSeller, loadingSeller] = useCollection(firestore.collection('users').where(\"ID\", \"==\", targetID));\n\n  if (!loadingSeller) {\n    targetSeller.forEach(targetSeller => {\n      targetName = targetSeller.data().Name;\n      targetPhoto = targetSeller.data().photoURL;\n    });\n  } // Getting the listings from the database.\n\n\n  const listingsRef = firestore.collection('listings');\n  const query = listingsRef.orderBy('createdAt', \"desc\"); // ordering by time\n  // retrieving them\n\n  const [listingsBig, loading] = useCollection(query); // check if data is still being loaded\n\n  if (!loading) {\n    // make sure to take most recent posts\n    var index = 0;\n    listingsBig.forEach(doc => {\n      listings[index] = doc.data();\n      docsID[index] = doc.id;\n      index++;\n    });\n  }\n\n  const getListingCard = (listingObj, iD) => {\n    let props = {\n      listingObj: listingObj,\n      iD: iD\n    };\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(HomeListingCard, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about\",\n      children: targetSeller ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profilePicture\",\n          src: targetPhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: targetName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Other information goes here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Listings need the \\\"Seller\\\" field to contain the userID of their owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This so we can display only the listings created by this user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Currently displaying all possible listings for now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), targetSeller ? /*#__PURE__*/_jsxDEV(Box, {\n        p: 1,\n        m: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: 4,\n          children: listings.map((listingObj, index) => getListingCard(listingObj, docsID[index]))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User has no listings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SellerProfile, \"BfzjFdQCvES9tBU7XsCZF/ICzMI=\", false, function () {\n  return [useLocation, useLocation, useCollection, useCollection];\n});\n\n_c = SellerProfile;\nexport default SellerProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerProfile\");","map":{"version":3,"sources":["C:/Users/joseg/OneDrive/Desktop/CampusComm/src/SellerProfile.js"],"names":["React","firebase","useCollection","useLocation","Box","Grid","HomeListingCard","firestore","target","targetID","targetName","targetPhoto","listings","docsID","SellerProfile","state","targetUserName","targetUserID","targetSeller","loadingSeller","collection","where","forEach","data","Name","photoURL","listingsRef","query","orderBy","listingsBig","loading","index","doc","id","getListingCard","listingObj","iD","props","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAAQC,aAAR,QAA4B,gCAA5B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,mBAAxB;AACA,OAAOC,eAAP,MAA4B,eAA5B;;;AAEA,MAAMC,SAAS,GAAGN,QAAQ,CAACM,SAAT,EAAlB;AACA,IAAIC,MAAJ,EAAYC,QAAZ,EAAsBC,UAAtB,EAAkCC,WAAlC;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,MAAM,GAAG,EAAb;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrBN,EAAAA,MAAM,GAAGL,WAAW,GAAGY,KAAd,CAAoB,CAApB,EAAuBC,cAAhC;AACAP,EAAAA,QAAQ,GAAGN,WAAW,GAAGY,KAAd,CAAoB,CAApB,EAAuBE,YAAlC;AAEA,MAAI,CAACC,YAAD,EAAeC,aAAf,IAAgCjB,aAAa,CAACK,SAAS,CAACa,UAAV,CAAqB,OAArB,EAA8BC,KAA9B,CAAoC,IAApC,EAA0C,IAA1C,EAAgDZ,QAAhD,CAAD,CAAjD;;AAEA,MAAI,CAACU,aAAL,EAAoB;AAChBD,IAAAA,YAAY,CAACI,OAAb,CAAqBJ,YAAY,IAAI;AACjCR,MAAAA,UAAU,GAAGQ,YAAY,CAACK,IAAb,GAAoBC,IAAjC;AACAb,MAAAA,WAAW,GAAGO,YAAY,CAACK,IAAb,GAAoBE,QAAlC;AACH,KAHD;AAIH,GAXoB,CAarB;;;AACA,QAAMC,WAAW,GAAGnB,SAAS,CAACa,UAAV,CAAqB,UAArB,CAApB;AACA,QAAMO,KAAK,GAAGD,WAAW,CAACE,OAAZ,CAAoB,WAApB,EAAiC,MAAjC,CAAd,CAfqB,CAemC;AACxD;;AAEA,QAAM,CAACC,WAAD,EAAcC,OAAd,IAAyB5B,aAAa,CAACyB,KAAD,CAA5C,CAlBqB,CAoBrB;;AACA,MAAI,CAACG,OAAL,EAAc;AACV;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAF,IAAAA,WAAW,CAACP,OAAZ,CAAoBU,GAAG,IAAI;AACvBpB,MAAAA,QAAQ,CAACmB,KAAD,CAAR,GAAkBC,GAAG,CAACT,IAAJ,EAAlB;AACAV,MAAAA,MAAM,CAACkB,KAAD,CAAN,GAAgBC,GAAG,CAACC,EAApB;AACAF,MAAAA,KAAK;AACR,KAJD;AAMH;;AAED,QAAMG,cAAc,GAAG,CAACC,UAAD,EAAaC,EAAb,KAAoB;AACvC,QAAIC,KAAK,GAAG;AACRF,MAAAA,UAAU,EAAEA,UADJ;AAERC,MAAAA,EAAE,EAAEA;AAFI,KAAZ;AAKA,wBACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACI,QAAC,eAAD,OAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAXD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACKnB,YAAY,gBACT;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,GAAG,EAAEP;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,sBADS,gBAOT;AARR;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKQ,YAAY,gBACT,QAAC,GAAD;AAAK,QAAA,CAAC,EAAE,CAAR;AAAW,QAAA,CAAC,EAAE,CAAd;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAC,QAAxB;AAAiC,UAAA,OAAO,EAAE,CAA1C;AAAA,oBACKN,QAAQ,CAAC0B,GAAT,CAAa,CAACH,UAAD,EAAaJ,KAAb,KACVG,cAAc,CAACC,UAAD,EAAatB,MAAM,CAACkB,KAAD,CAAnB,CADjB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADS,gBAUT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdR;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAhFQjB,a;UACIX,W,EACEA,W,EAEyBD,a,EAcLA,a;;;KAlB1BY,a;AAkFT,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport './Profile.css';\nimport firebase from 'firebase/app';\nimport {useCollection} from 'react-firebase-hooks/firestore';\nimport {useLocation} from 'react-router-dom';\nimport {Box, Grid} from \"@material-ui/core\";\nimport HomeListingCard from \"./listingCard\";\n\nconst firestore = firebase.firestore();\nvar target, targetID, targetName, targetPhoto;\n\nvar listings = [];\nvar docsID = [];\n\nfunction SellerProfile() {\n    target = useLocation().state[0].targetUserName;\n    targetID = useLocation().state[0].targetUserID;\n\n    var [targetSeller, loadingSeller] = useCollection(firestore.collection('users').where(\"ID\", \"==\", targetID));\n\n    if (!loadingSeller) {\n        targetSeller.forEach(targetSeller => {\n            targetName = targetSeller.data().Name;\n            targetPhoto = targetSeller.data().photoURL;\n        })\n    }\n\n    // Getting the listings from the database.\n    const listingsRef = firestore.collection('listings');\n    const query = listingsRef.orderBy('createdAt', \"desc\"); // ordering by time\n    // retrieving them\n\n    const [listingsBig, loading] = useCollection(query);\n\n    // check if data is still being loaded\n    if (!loading) {\n        // make sure to take most recent posts\n        var index = 0;\n        listingsBig.forEach(doc => {\n            listings[index] = doc.data();\n            docsID[index] = doc.id;\n            index++;\n        })\n\n    }\n\n    const getListingCard = (listingObj, iD) => {\n        let props = {\n            listingObj: listingObj,\n            iD: iD,\n        }\n\n        return (\n            <Grid item>\n                <HomeListingCard {...props} />\n            </Grid>\n        )\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"about\">\n                {targetSeller ?\n                    <>\n                        <img className=\"profilePicture\" src={targetPhoto}/>\n                        <h1>{targetName}</h1>\n                        <p>Other information goes here</p>\n                    </>\n                    :\n                    <></>\n                }\n            </div>\n\n            <div className=\"listings\">\n                <h1>Listings need the \"Seller\" field to contain the userID of their owner</h1>\n                <h2>This so we can display only the listings created by this user</h2>\n                <p>Currently displaying all possible listings for now</p>\n                {targetSeller ?\n                    <Box p={1} m={1}>\n                        <Grid container justify=\"center\" spacing={4}>\n                            {listings.map((listingObj, index) =>\n                                getListingCard(listingObj, docsID[index])\n                            )}\n                        </Grid>\n                    </Box>\n\n                    :\n                    <p>User has no listings</p>\n                }\n            </div>\n        </div>\n\n    )\n}\n\nexport default SellerProfile;"]},"metadata":{},"sourceType":"module"}