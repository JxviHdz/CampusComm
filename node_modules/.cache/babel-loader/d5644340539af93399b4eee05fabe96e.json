{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hernandez\\\\Documents\\\\DOCUMENTOS UNIVERSIDAD\\\\INGENIERIA DE SOFTWARE\\\\CampusComm\\\\src\\\\Product.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase, { auth, storage } from './firebase';\nimport './Product.css';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, FormControl, Grid, InputAdornment, InputLabel, LinearProgress, OutlinedInput, Paper, SvgIcon, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uploadVec from \"./img/uploadTemplate.svg\";\nimport { CheckOutlined, ClearOutlined, DeleteOutlined, PublishOutlined, Update } from \"@material-ui/icons\";\nimport red from '@material-ui/core/colors/red'; //Tried to make it nicer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firestore = firebase.firestore(); // accessing the firestore (database)\n\nfunction UploadTemplate() {\n  return /*#__PURE__*/_jsxDEV(SvgIcon, {\n    children: /*#__PURE__*/_jsxDEV(\"uploadVec\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UploadTemplate;\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: \"30px\"\n  },\n  media: {\n    display: 'flex',\n    justifyContent: 'center',\n    objectFit: \"cover\"\n  },\n  noButton: {\n    color: theme.palette.action.disabled,\n    borderColor: theme.palette.action.disabled\n  },\n  yesButton: {\n    color: red[200],\n    borderColor: red[200]\n  }\n}));\n\nfunction Product(props) {\n  _s();\n\n  const history = useHistory();\n  const [user] = useAuthState(auth);\n\n  if (!user) {\n    history.push(\"./menu\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Upload, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Product, \"ud6biZUoSofqmfDIF/Gr7Da2d24=\", false, function () {\n  return [useHistory, useAuthState];\n});\n\n_c2 = Product;\nlet index = 0;\nlet startIndex = 0;\nconst max_index = 7;\n/**\n * Mainly this is a form where the user inputs the details of their product\n * Inpired from the chat room tutorial I sent on WhatsApp\n * Tbh, I am not entirely sure what all the lines do, but it seems to work.\n */\n\nfunction Upload(props) {\n  _s2();\n\n  const editing = props.location.state !== undefined;\n  const name = editing ? props.location.state.name : \"\";\n  const price = editing ? props.location.state.price : \"\";\n  const url = editing ? [props.location.state.url] : [];\n  const tags = editing ? props.location.state.categories.join(\", \") : \"\";\n  const extraPhotos = editing ? props.location.state.extraUrls : [];\n  const description = editing ? props.location.state.description : \"\";\n  const id = editing ? props.location.state.iDListing : \"\";\n  const listingsRef = firestore.collection('listings'); // reference to the listings collection\n  // the fields of a listing\n\n  const [user] = useAuthState(auth);\n  const [values, setValues] = useState({\n    name: name,\n    price: price,\n    images: url.concat(extraPhotos),\n    description: description,\n    tags: tags\n  });\n  const [emptyValues, setEmptyValues] = useState({\n    name: false,\n    price: false,\n    images: false,\n    description: false\n  });\n  const [startIndex, setStartIndex] = useState(values.images.length);\n  index = values.images.length;\n  const [uploading, setUploading] = useState(false);\n  const [disableUpload, setDisableUpload] = useState(index > 5);\n  const [areYouSure, setAreYouSure] = useState(false);\n  const [loadingBar, setLoadingBar] = useState(\"0\");\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  function handleChangeImage() {\n    for (let i = 0; i < document.querySelector('input[type=file]').files.length; ++i) {\n      const preview = document.getElementById(`image_output_${index}`);\n      const file = document.querySelector('input[type=file]').files[i];\n      const reader = new FileReader();\n      reader.addEventListener('load', function () {\n        preview.src = reader.result;\n      }, false);\n\n      if (file && file.type.match('image.*')) {\n        reader.readAsDataURL(file);\n        values.images.push(file);\n        index += 1;\n      } else {\n        alert('Please only upload images');\n      }\n\n      setDisableUpload(index > 5);\n      console.log(\"image uploaded locally\");\n    }\n  } // generates random alphanumeric file name of length 25\n\n\n  const generateFileName = () => {\n    let fileName = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n\n    for (let i = 0; i < 25; i++) {\n      fileName += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return fileName;\n  }; //gets the file extension from the image name\n\n\n  const getFileExtension = image => {\n    let fileExtension = '';\n\n    for (let i = image.name.length; i > 0; i--) {\n      if (image.name.charAt(i) === '.') {\n        fileExtension = image.name.charAt(i) + fileExtension;\n        break;\n      } else {\n        fileExtension = image.name.charAt(i) + fileExtension;\n      }\n    }\n\n    return fileExtension;\n  }; //submits form by getting file name, uploading image, getting url and then submitting listing\n\n\n  const submitForm = async e => {\n    let returnEarly = false;\n\n    if (values.name === \"\") {\n      setEmptyValues(prevState => ({ ...prevState,\n        name: true\n      }));\n      returnEarly = true;\n    } else {\n      setEmptyValues(prevState => ({ ...prevState,\n        name: false\n      }));\n    }\n\n    if (values.price === \"\" || values.price < 0) {\n      setEmptyValues(prevState => ({ ...prevState,\n        price: true\n      }));\n      returnEarly = true;\n    } else {\n      setEmptyValues(prevState => ({ ...prevState,\n        price: false\n      }));\n    }\n\n    if (values.description === \"\") {\n      setEmptyValues(prevState => ({ ...prevState,\n        description: true\n      }));\n      returnEarly = true;\n    } else {\n      setEmptyValues(prevState => ({ ...prevState,\n        description: false\n      }));\n    }\n\n    if (values.images.length === 0) alert(\"Debes subir al menos 1 imagen.\");\n\n    if (returnEarly) {\n      return;\n    }\n\n    setLoadingBar(\"100\");\n    setUploading(true);\n\n    async function uploadImage(image, firstImage, lastImage) {\n      let fileName = generateFileName();\n      let fileExtension = getFileExtension(image);\n      let storageRef = storage.ref('images/' + fileName + fileExtension);\n      return new Promise(function (resolve, reject) {\n        const uploadImg = storageRef.put(image);\n        uploadImg.on(\"state_changed\", snapshot => {\n          console.log(\"uploading\");\n        }, error => {\n          return reject(error);\n        }, () => {\n          return resolve(uploadImg);\n        });\n      }).then(function (uploadImg) {\n        uploadImg.ref.getDownloadURL().then(url => {\n          if (firstImage && lastImage) {\n            console.log(\"last image uploading\");\n            listingsRef.add({\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              imgUrl: url,\n              seller: user.uid,\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n              likedBy: [user.uid],\n              interestedUsers: \"\",\n              allPhotos: imageUrls,\n              categories: values.tags.split(\",\").map(str => str.replace(/\\s/g, '')).map(str => str.charAt(0).toUpperCase() + str.substr(1).toLowerCase())\n            }).then(() => {\n              history.push(\"/\", {\n                successful: true\n              });\n              return 'producto presentado. redireccionando...';\n            });\n          } else if (lastImage) {\n            console.log(\"last image uploading\");\n            imageUrls.push(url);\n            listingsRef.add({\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              imgUrl: primaryUrl,\n              seller: user.uid,\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n              likedBy: [user.uid],\n              interestedUsers: \"\",\n              allPhotos: imageUrls,\n              categories: values.tags.split(\",\").map(str => str.replace(/\\s/g, '')).map(str => str.charAt(0).toUpperCase() + str.substr(1).toLowerCase())\n            }).then(() => {\n              console.log('product submitted. redirecting...');\n              history.push(\"/\", {\n                successful: true\n              });\n              return 'product submitted. redirecting...';\n            });\n          } else if (firstImage) {\n            console.log(\"first image uploaded\");\n            primaryUrl = url;\n            return 'product submitted.';\n          } else {\n            console.log(\"next image uploading\");\n            imageUrls.push(url);\n            return 'product submitted.';\n          }\n        });\n      });\n    }\n\n    async function updateListing(image, firstImage, lastImage, noImage) {\n      const editingListingsRef = firestore.collection('listings').doc(id);\n\n      if (noImage) {\n        await editingListingsRef.update({\n          name: values.name,\n          description: values.description,\n          price: values.price,\n          categories: values.tags.split(\",\").map(str => str.replace(/\\s/g, '')).map(str => str.charAt(0).toUpperCase() + str.substr(1).toLowerCase())\n        });\n        console.log(\"listing updated\");\n        history.push(\"/\");\n        return;\n      }\n\n      let fileName = generateFileName();\n      let fileExtension = getFileExtension(image);\n      const uploadImg = storage.ref('images/' + fileName + fileExtension).put(image);\n      await uploadImg.on(\"state_changed\", snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(fileName + fileExtension).getDownloadURL().then(url => {\n          if (lastImage) {\n            imageUrls.push(url);\n            editingListingsRef.update({\n              name: values.name,\n              description: values.description,\n              price: values.price,\n              allPhotos: imageUrls,\n              categories: values.tags.split(\",\").map(str => str.replace(/\\s/g, '')).map(str => str.charAt(0).toUpperCase() + str.substr(1).toLowerCase())\n            }).then(() => {\n              console.log('product submitted. redirecting...');\n              history.push(\"/\", {\n                successful: true\n              });\n            });\n          } else if (firstImage) {\n            primaryUrl = url;\n          } else {\n            imageUrls.push(url);\n          }\n        });\n      });\n    }\n\n    let primaryUrl = null;\n    let imageUrls = [];\n\n    if (editing) {\n      if (index === startIndex) {\n        updateListing(null, false, false, true);\n      } else {\n        imageUrls = values.images.slice(1, startIndex);\n\n        for (let i = startIndex; i < index; ++i) {\n          if (i === index - 1) {\n            // Last photo to upload\n            updateListing(values.images[i], false, true, false);\n          } else {\n            updateListing(values.images[i], false, false, false);\n          }\n        }\n      }\n    } else {\n      let counter = 0;\n\n      for (const image of values.images) {\n        if (values.images.length === 1) {\n          console.log(\"only image\");\n          await uploadImage(image, true, true);\n        } else if (counter === 0) {\n          console.log(\"first image\");\n          await uploadImage(image, true, false);\n        } else if (counter === values.images.length - 1) {\n          console.log(\"last image\");\n          await uploadImage(image, false, true);\n        } else {\n          console.log(\"middle image\");\n          await uploadImage(image, false, false);\n        }\n\n        counter += 1;\n      }\n    }\n  };\n\n  const getImageName = url => {\n    let baseUrl = 'https://firebasestorage.googleapis.com/v0/b/ipproject-27ae8.appspot.com/o/images%2F';\n    let imageName = url.replace(baseUrl, '');\n    let indexOfEnd = imageName.indexOf('?');\n    imageName = imageName.substring(0, indexOfEnd);\n    return imageName;\n  };\n\n  async function deleteListing() {\n    for (const image of values.images) {\n      const imageName = getImageName(image);\n      await storage.ref(\"images\").child(imageName).delete();\n    }\n\n    await listingsRef.doc(id).delete().then(() => {\n      history.push(\"/\");\n    });\n  }\n\n  let printImages = [];\n\n  for (let i = 0; i < 6; ++i) {\n    printImages.push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: `image_output_${i}`,\n        src: typeof values.images[i] === \"object\" && values.images[i] !== null ? document.getElementById(`image_output_${i}`).src : values.images[i] !== undefined ? values.images[i] : uploadVec,\n        alt: \"brand logo\",\n        width: 175,\n        height: 175,\n        className: classes.media\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this));\n  } // the mai form\n\n\n  return (\n    /*#__PURE__*/\n    // <form className = 'form' onSubmit={submitForm}>\n    //     <label className='label1'>Name: </label><input className=\"input\" type=\"text\" value={nameVal} onChange={(e) => setFormValue(e.target.value)}/>\n    //     <label className='label2'>Price: </label><input className=\"input\" type=\"number\" value={priceVal} onChange={(e) => setFormValue3(e.target.value)}/>\n    //     <label className='label1'>Description: </label><textarea className=\"description\" placeholder=\"Describe your product here\" value={descriptionVal} onChange={(e) => setFormValue2(e.target.value)}/>\n    //     <label className='label1'>Image Upload</label><input className=\"fileInput\" type=\"file\" onChange={handleChange}/>\n    //     <button className='button' type=\"submit\">Post Listing</button>\n    //\n    // </form>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        p: 1,\n        m: 1,\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            p: 3,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 9,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: emptyValues.name,\n                  fullWidth: true,\n                  required: true,\n                  value: values.name,\n                  id: \"Product-Name\",\n                  label: \"Product Name\",\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  helperText: \"Enter a descriptive title for you product. Try using key words.\",\n                  className: classes.name,\n                  onChange: handleChange(\"name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 3,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  className: classes.margin,\n                  variant: \"outlined\",\n                  error: emptyValues.price,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"standard-adornment-amount\",\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                    id: \"standard-adornment-amount\",\n                    value: values.price,\n                    type: \"number\",\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: \"\\xA3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 57\n                    }, this),\n                    labelWidth: 50,\n                    onChange: handleChange(\"price\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                direction: \"row\",\n                alignItems: \"center\",\n                justify: \"center\",\n                item: true,\n                xs: 12,\n                md: 3,\n                lg: 2,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      disabled: disableUpload,\n                      startIcon: /*#__PURE__*/_jsxDEV(PublishOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 467,\n                        columnNumber: 56\n                      }, this),\n                      id: \"upload_button\",\n                      variant: \"outlined\",\n                      component: \"label\",\n                      color: \"primary\",\n                      style: {\n                        margin: \"auto\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"upload-photo\",\n                        name: \"upload-photo\",\n                        type: \"file\",\n                        multiple: true,\n                        hidden: true,\n                        onChange: handleChangeImage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 474,\n                        columnNumber: 45\n                      }, this), \"Upload Image\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                direction: \"row\",\n                alignItems: \"center\",\n                justify: \"space-evenly\",\n                item: true,\n                xs: 12,\n                md: 9,\n                lg: 10,\n                children: printImages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  required: true,\n                  multiline: true,\n                  error: emptyValues.description,\n                  value: values.description,\n                  rows: 5,\n                  rowsMax: 13,\n                  id: \"Product-Description\",\n                  label: \"Product Description\",\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  helperText: \"Enter a good description for your product\",\n                  className: classes.name,\n                  onChange: handleChange(\"description\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  value: values.tags,\n                  id: \"Product-Tags\",\n                  label: \"Product Tags\",\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  helperText: \"Enter some tags for your product (seperate with commas (,)\",\n                  className: classes.name,\n                  onChange: handleChange(\"tags\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                style: {\n                  width: `${loadingBar}%`\n                },\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 0,\n                direction: \"row\",\n                alignItems: \"center\",\n                justify: \"center\",\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    submitForm().then();\n                  },\n                  disabled: uploading,\n                  startIcon: /*#__PURE__*/_jsxDEV(Update, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 52\n                  }, this),\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  children: editing ? uploading ? \"updating\" : \"update\" : uploading ? \"uploading\" : \"upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 0,\n                direction: \"row\",\n                alignItems: \"center\",\n                justify: \"center\",\n                item: true,\n                xs: 12,\n                children: areYouSure ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    m: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => {\n                        setAreYouSure(false);\n                      },\n                      startIcon: /*#__PURE__*/_jsxDEV(ClearOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 566,\n                        columnNumber: 60\n                      }, this),\n                      variant: \"outlined\",\n                      className: classes.noButton,\n                      children: \"No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    m: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => {\n                        deleteListing().then();\n                      },\n                      startIcon: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 576,\n                        columnNumber: 60\n                      }, this),\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      children: \"Yes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true) : editing ? /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    setAreYouSure(true);\n                  },\n                  startIcon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 70\n                  }, this),\n                  variant: \"outlined\",\n                  className: classes.yesButton,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 51\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  );\n}\n\n_s2(Upload, \"FglM4suKE008PMpSRJ4eK+SlbEk=\", false, function () {\n  return [useAuthState, useStyles, useHistory];\n});\n\n_c3 = Upload;\nexport default Product;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UploadTemplate\");\n$RefreshReg$(_c2, \"Product\");\n$RefreshReg$(_c3, \"Upload\");","map":{"version":3,"sources":["C:/Users/Hernandez/Documents/DOCUMENTOS UNIVERSIDAD/INGENIERIA DE SOFTWARE/CampusComm/src/Product.js"],"names":["React","useState","firebase","auth","storage","useAuthState","useHistory","Box","Button","FormControl","Grid","InputAdornment","InputLabel","LinearProgress","OutlinedInput","Paper","SvgIcon","TextField","makeStyles","CheckOutlined","ClearOutlined","DeleteOutlined","PublishOutlined","Update","red","firestore","UploadTemplate","useStyles","theme","container","margin","media","display","justifyContent","objectFit","noButton","color","palette","action","disabled","borderColor","yesButton","Product","props","history","user","push","index","startIndex","max_index","Upload","editing","location","state","undefined","name","price","url","tags","categories","join","extraPhotos","extraUrls","description","id","iDListing","listingsRef","collection","values","setValues","images","concat","emptyValues","setEmptyValues","setStartIndex","length","uploading","setUploading","disableUpload","setDisableUpload","areYouSure","setAreYouSure","loadingBar","setLoadingBar","handleChange","prop","event","target","value","classes","handleChangeImage","i","document","querySelector","files","preview","getElementById","file","reader","FileReader","addEventListener","src","result","type","match","readAsDataURL","alert","console","log","generateFileName","fileName","characters","charactersLength","charAt","Math","floor","random","getFileExtension","image","fileExtension","submitForm","e","returnEarly","prevState","uploadImage","firstImage","lastImage","storageRef","ref","Promise","resolve","reject","uploadImg","put","on","snapshot","error","then","getDownloadURL","add","imgUrl","seller","uid","createdAt","FieldValue","serverTimestamp","likedBy","interestedUsers","allPhotos","imageUrls","split","map","str","replace","toUpperCase","substr","toLowerCase","successful","primaryUrl","updateListing","noImage","editingListingsRef","doc","update","child","slice","counter","getImageName","baseUrl","imageName","indexOfEnd","indexOf","substring","deleteListing","delete","printImages","uploadVec","width"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport firebase, {auth, storage} from './firebase';\nimport './Product.css';\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    LinearProgress,\n    OutlinedInput,\n    Paper,\n    SvgIcon,\n    TextField\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport uploadVec from \"./img/uploadTemplate.svg\";\nimport {CheckOutlined, ClearOutlined, DeleteOutlined, PublishOutlined, Update} from \"@material-ui/icons\";\nimport red from '@material-ui/core/colors/red';\n\n//Tried to make it nicer\n\nconst firestore = firebase.firestore(); // accessing the firestore (database)\n\nfunction UploadTemplate() {\n    return (\n        <SvgIcon>\n            <uploadVec/>\n        </SvgIcon>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        margin: \"30px\",\n    },\n    media: {\n\n        display: 'flex',\n        justifyContent: 'center',\n        objectFit: \"cover\",\n    },\n    noButton: {\n        color: theme.palette.action.disabled,\n        borderColor: theme.palette.action.disabled,\n    },\n    yesButton: {\n        color: red[200],\n        borderColor: red[200],\n    },\n}));\n\nfunction Product(props) {\n    const history = useHistory();\n    const [user] = useAuthState(auth);\n\n\n    if (!user) {\n        history.push(\"./menu\")\n    }\n\n    return (\n        <Upload {...props}/>\n    );\n}\n\n\nlet index = 0\nlet startIndex = 0\nconst max_index = 7\n\n/**\n * Mainly this is a form where the user inputs the details of their product\n * Inpired from the chat room tutorial I sent on WhatsApp\n * Tbh, I am not entirely sure what all the lines do, but it seems to work.\n */\nfunction Upload(props) {\n    const editing = props.location.state !== undefined\n    const name = editing ? props.location.state.name : \"\";\n    const price = editing ? props.location.state.price : \"\";\n    const url = editing ? [props.location.state.url] : [];\n    const tags = editing ? props.location.state.categories.join(\", \") : \"\";\n    const extraPhotos = editing ? props.location.state.extraUrls : [];\n    const description = editing ? props.location.state.description : \"\";\n    const id = editing ? props.location.state.iDListing : \"\";\n    const listingsRef = firestore.collection('listings'); // reference to the listings collection\n\n    // the fields of a listing\n    const [user] = useAuthState(auth);\n    const [values, setValues] = useState({\n        name: name,\n        price: price,\n        images: url.concat(extraPhotos),\n        description: description,\n        tags: tags,\n    })\n    const [emptyValues, setEmptyValues] = useState({\n        name: false,\n        price: false,\n        images: false,\n        description: false,\n    })\n    const [startIndex, setStartIndex] = useState(values.images.length)\n    index = values.images.length\n\n\n    const [uploading, setUploading] = useState(false)\n    const [disableUpload, setDisableUpload] = useState(index > 5)\n    const [areYouSure, setAreYouSure] = useState(false)\n    const [loadingBar, setLoadingBar] = useState(\"0\")\n\n    const handleChange = (prop) => (event) => {\n        setValues({...values, [prop]: event.target.value});\n    }\n\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    function handleChangeImage() {\n        for (let i = 0; i < document.querySelector('input[type=file]').files.length; ++i) {\n            const preview = document.getElementById(`image_output_${index}`)\n            const file = document.querySelector('input[type=file]').files[i]\n            const reader = new FileReader();\n\n\n            reader.addEventListener('load', function () {\n                preview.src = reader.result;\n            }, false);\n\n            if (file && file.type.match('image.*')) {\n                reader.readAsDataURL(file)\n                values.images.push(file);\n                index += 1\n            } else {\n                alert('Please only upload images');\n            }\n\n            setDisableUpload(index > 5)\n            console.log(\"image uploaded locally\")\n        }\n    }\n\n    // generates random alphanumeric file name of length 25\n    const generateFileName = () => {\n        let fileName = '';\n        let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        let charactersLength = characters.length;\n        for (let i = 0; i < 25; i++) {\n            fileName += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return fileName;\n    }\n\n    //gets the file extension from the image name\n    const getFileExtension = (image) => {\n        let fileExtension = '';\n        for (let i = image.name.length; i > 0; i--) {\n            if (image.name.charAt(i) === '.') {\n                fileExtension = image.name.charAt(i) + fileExtension;\n                break;\n            } else {\n                fileExtension = image.name.charAt(i) + fileExtension;\n            }\n        }\n        return fileExtension;\n    }\n\n    //submits form by getting file name, uploading image, getting url and then submitting listing\n    const submitForm = async (e) => {\n        let returnEarly = false;\n        if (values.name === \"\") {\n            setEmptyValues(prevState => ({...prevState, name: true}))\n            returnEarly = true;\n        } else {\n            setEmptyValues(prevState => ({...prevState, name: false}))\n        }\n        if (values.price === \"\" || values.price < 0) {\n            setEmptyValues(prevState => ({...prevState, price: true}))\n            returnEarly = true;\n        } else {\n            setEmptyValues(prevState => ({...prevState, price: false}))\n        }\n        if (values.description === \"\") {\n            setEmptyValues(prevState => ({...prevState, description: true}))\n            returnEarly = true;\n        } else {\n            setEmptyValues(prevState => ({...prevState, description: false}))\n        }\n\n        if (values.images.length === 0) alert(\"Debes subir al menos 1 imagen.\")\n\n        if (returnEarly) {\n            return;\n        }\n\n        setLoadingBar(\"100\")\n\n        setUploading(true)\n\n        async function uploadImage(image, firstImage, lastImage) {\n\n            let fileName = generateFileName();\n\n            let fileExtension = getFileExtension(image);\n\n            let storageRef = storage.ref('images/' + fileName + fileExtension);\n\n            return new Promise(function (resolve, reject) {\n                    const uploadImg = storageRef.put(image);\n\n                uploadImg.on(\"state_changed\",\n                    (snapshot) => {\n                        console.log(\"uploading\")\n                    }, (error) => {\n                        return reject(error)\n                    },\n                    () => {\n                        return resolve(uploadImg)\n                    }\n                    );\n                }).then(function (uploadImg) {\n                uploadImg.ref.getDownloadURL().then(url => {\n\n                    if (firstImage && lastImage) {\n                        console.log(\"last image uploading\")\n                        listingsRef.add({\n                            name: values.name,\n                            description: values.description,\n                            price: values.price,\n                            imgUrl: url,\n                            seller: user.uid,\n                            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n                            likedBy: [user.uid],\n                            interestedUsers: \"\",\n                            allPhotos: imageUrls,\n                            categories: values.tags.split(\",\").map(str => str.replace(/\\s/g, '')).map(str => str.charAt(0).toUpperCase() + str.substr(1).toLowerCase()),\n                        }).then(() => {\n                            history.push(\"/\", {successful: true})\n                            return('producto presentado. redireccionando...');\n                        });\n                    } else if (lastImage) {\n                        console.log(\"last image uploading\")\n                        imageUrls.push(url)\n                        listingsRef.add({\n                            name: values.name,\n                            description: values.description,\n                            price: values.price,\n                            imgUrl: primaryUrl,\n                            seller: user.uid,\n                            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n                            likedBy: [user.uid],\n                            interestedUsers: \"\",\n                            allPhotos: imageUrls,\n                            categories: values.tags.split(\",\").map(str => str.replace(/\\s/g, '')).map(str => str.charAt(0).toUpperCase() + str.substr(1).toLowerCase()),\n                        }).then(() => {\n                            console.log('product submitted. redirecting...');\n                            history.push(\"/\", {successful: true})\n                            return('product submitted. redirecting...');\n                        });\n                    } else if (firstImage) {\n                        console.log(\"first image uploaded\")\n                        primaryUrl = url;\n                        return('product submitted.');\n                    } else {\n                        console.log(\"next image uploading\")\n                        imageUrls.push(url)\n                        return('product submitted.');\n                    }\n                });\n                }\n\n            )\n\n\n        }\n\n\n        async function updateListing(image, firstImage, lastImage, noImage) {\n            const editingListingsRef = firestore.collection('listings').doc(id);\n\n            if (noImage) {\n                await editingListingsRef.update({\n                    name: values.name,\n                    description: values.description,\n                    price: values.price,\n                    categories: values.tags.split(\",\").map(str => str.replace(/\\s/g, '')).map(str => str.charAt(0).toUpperCase() + str.substr(1).toLowerCase()),\n                })\n                console.log(\"listing updated\")\n                history.push(\"/\")\n                return;\n            }\n\n            let fileName = generateFileName();\n\n            let fileExtension = getFileExtension(image);\n\n            const uploadImg = storage.ref('images/' + fileName + fileExtension).put(image);\n            await uploadImg.on(\"state_changed\", snapshot => {\n                }, error => {\n                    console.log(error);\n                },\n                () => {\n                    storage.ref('images').child(fileName + fileExtension).getDownloadURL().then(url => {\n\n                        if (lastImage) {\n                            imageUrls.push(url)\n                            editingListingsRef.update({\n                                name: values.name,\n                                description: values.description,\n                                price: values.price,\n                                allPhotos: imageUrls,\n                                categories: values.tags.split(\",\").map(str => str.replace(/\\s/g, '')).map(str => str.charAt(0).toUpperCase() + str.substr(1).toLowerCase()),\n                            }).then(() => {\n                                console.log('product submitted. redirecting...');\n                                history.push(\"/\", {successful: true})\n                            });\n                        } else if (firstImage) {\n                            primaryUrl = url\n                        } else {\n                            imageUrls.push(url)\n                        }\n                    });\n                });\n        }\n\n        let primaryUrl = null;\n        let imageUrls = []\n\n        if (editing) {\n            if (index === startIndex) {\n                updateListing(null, false, false, true)\n            } else {\n                imageUrls = values.images.slice(1, startIndex)\n                for (let i = startIndex; i < index; ++i) {\n                    if (i === index - 1) { // Last photo to upload\n                        updateListing(values.images[i], false, true, false)\n                    } else {\n                        updateListing(values.images[i], false, false, false)\n                    }\n                }\n            }\n        } else {\n\n            let counter = 0\n            for (const image of values.images) {\n                if (values.images.length === 1) {\n                    console.log(\"only image\")\n                    await uploadImage(image, true, true)\n                } else if (counter === 0) {\n                    console.log(\"first image\")\n                    await uploadImage(image, true, false)\n\n                } else if (counter === values.images.length - 1) {\n                    console.log(\"last image\")\n                    await uploadImage(image, false, true)\n\n                } else {\n                    console.log(\"middle image\")\n                    await uploadImage(image, false, false)\n\n                }\n                counter += 1\n            }\n        }\n\n    }\n\n    const getImageName = (url) => {\n        let baseUrl = 'https://firebasestorage.googleapis.com/v0/b/ipproject-27ae8.appspot.com/o/images%2F';\n        let imageName = url.replace(baseUrl, '');\n        let indexOfEnd = imageName.indexOf('?');\n        imageName = imageName.substring(0, indexOfEnd);\n        return imageName\n    }\n\n    async function deleteListing() {\n        for (const image of values.images) {\n            const imageName = getImageName(image)\n            await storage.ref(\"images\").child(imageName).delete()\n        }\n        await listingsRef.doc(id).delete().then(() => {\n            history.push(\"/\")\n        })\n    }\n\n    let printImages = []\n\n    for (let i = 0; i < 6; ++i) {\n        printImages.push(\n            <Grid item>\n                <img id={`image_output_${i}`}\n                     src={typeof values.images[i] === \"object\" && values.images[i] !== null ? document.getElementById(`image_output_${i}`).src\n                         : (values.images[i] !== undefined ? values.images[i] : uploadVec)\n                     } alt=\"brand logo\" width={175} height={175}\n                     className={classes.media}/>\n            </Grid>\n        )\n    }\n\n\n    // the mai form\n    return (\n        // <form className = 'form' onSubmit={submitForm}>\n        //     <label className='label1'>Name: </label><input className=\"input\" type=\"text\" value={nameVal} onChange={(e) => setFormValue(e.target.value)}/>\n        //     <label className='label2'>Price: </label><input className=\"input\" type=\"number\" value={priceVal} onChange={(e) => setFormValue3(e.target.value)}/>\n        //     <label className='label1'>Description: </label><textarea className=\"description\" placeholder=\"Describe your product here\" value={descriptionVal} onChange={(e) => setFormValue2(e.target.value)}/>\n        //     <label className='label1'>Image Upload</label><input className=\"fileInput\" type=\"file\" onChange={handleChange}/>\n        //     <button className='button' type=\"submit\">Post Listing</button>\n        //\n        // </form>\n        <>\n            <Box\n                p={1} m={1}\n                className={classes.container}\n            >\n                <Paper>\n                    <Box p={3}>\n                        <Grid container\n                              spacing={3}\n                        >\n                            <Grid item xs={12} sm={9}>\n                                <TextField\n\n                                    error={emptyValues.name}\n                                    fullWidth\n                                    required\n                                    value={values.name}\n                                    id=\"Product-Name\"\n                                    label=\"Product Name\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    helperText=\"Enter a descriptive title for you product. Try using key words.\"\n                                    className={classes.name}\n                                    onChange={handleChange(\"name\")}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={3}>\n                                <FormControl fullWidth required className={classes.margin} variant=\"outlined\"\n                                             error={emptyValues.price}>\n                                    <InputLabel htmlFor=\"standard-adornment-amount\">Price</InputLabel>\n                                    <OutlinedInput\n                                        id=\"standard-adornment-amount\"\n                                        value={values.price}\n                                        type=\"number\"\n                                        startAdornment={<InputAdornment position=\"start\">£</InputAdornment>}\n                                        labelWidth={50}\n                                        onChange={handleChange(\"price\")}\n                                    />\n                                </FormControl>\n                            </Grid>\n                            <Grid container\n                                  spacing={2}\n                                  direction=\"row\"\n                                  alignItems=\"center\"\n                                  justify=\"center\"\n                                  item\n                                  xs={12} md={3} lg={2}\n                            >\n                                <Grid item>\n                                    <Box textAlign=\"center\" alignItems=\"center\">\n                                        <Button\n                                            disabled={disableUpload}\n                                            startIcon={<PublishOutlined/>}\n                                            id=\"upload_button\"\n                                            variant=\"outlined\"\n                                            component=\"label\"\n                                            color=\"primary\"\n                                            style={{margin: \"auto\"}}\n                                        >\n                                            <input\n                                                id=\"upload-photo\"\n                                                name=\"upload-photo\"\n                                                type=\"file\"\n                                                multiple\n                                                hidden\n                                                onChange={handleChangeImage}\n                                            />\n                                            Upload Image\n                                        </Button>\n                                    </Box>\n\n                                </Grid>\n                            </Grid>\n                            <Grid container\n                                  spacing={1}\n                                  direction=\"row\"\n                                  alignItems=\"center\"\n                                  justify=\"space-evenly\"\n                                  item\n                                  xs={12} md={9} lg={10}\n                            >\n                                {printImages}\n\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    required\n                                    multiline\n                                    error={emptyValues.description}\n                                    value={values.description}\n                                    rows={5}\n                                    rowsMax={13}\n                                    id=\"Product-Description\"\n                                    label=\"Product Description\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    helperText=\"Enter a good description for your product\"\n                                    className={classes.name}\n                                    onChange={handleChange(\"description\")}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth\n                                    value={values.tags}\n                                    id=\"Product-Tags\"\n                                    label=\"Product Tags\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    helperText=\"Enter some tags for your product (seperate with commas (,)\"\n                                    className={classes.name}\n                                    onChange={handleChange(\"tags\")}\n                                />\n                            </Grid>\n                            <LinearProgress style={{width: `${loadingBar}%`}} color=\"secondary\"/>\n\n\n                            <Grid container\n                                  spacing={0}\n                                  direction=\"row\"\n                                  alignItems=\"center\"\n                                  justify=\"center\"\n                                  item\n                                  xs={12}\n                            >\n                                <Button onClick={() => {\n                                    submitForm().then()\n                                }}\n                                        disabled={uploading}\n                                        startIcon={<Update/>}\n                                        variant=\"outlined\"\n                                        color=\"primary\">\n                                    {editing ? (uploading ? \"updating\" : \"update\") : (uploading ? \"uploading\" : \"upload\")}\n                                </Button>\n                            </Grid><Grid container\n                                         spacing={0}\n                                         direction=\"row\"\n                                         alignItems=\"center\"\n                                         justify=\"center\"\n                                         item\n                                         xs={12}\n\n                        >\n                            {areYouSure ? (\n                                <>\n                                    <Box m={1}>\n                                        <Button onClick={() => {\n                                            setAreYouSure(false)\n                                        }}\n                                                startIcon={<ClearOutlined/>}\n                                                variant=\"outlined\"\n                                                className={classes.noButton}>\n                                            No\n                                        </Button>\n                                    </Box>\n                                    <Box m={1}>\n                                        <Button onClick={() => {\n                                            deleteListing().then()\n                                        }}\n                                                startIcon={<CheckOutlined/>}\n                                                variant=\"outlined\"\n                                                color=\"primary\">\n\n                                            Yes\n                                        </Button>\n                                    </Box>\n                                </>) : (editing ? <Button onClick={() => {\n                                setAreYouSure(true)\n                            }}\n                                                          startIcon={<DeleteOutlined/>}\n                                                          variant=\"outlined\"\n                                                          className={classes.yesButton}>\n                                Delete\n                            </Button> : <></>)}\n                        </Grid>\n                        </Grid>\n                    </Box>\n                </Paper>\n            </Box>\n        </>\n    )\n\n}\n\n\nexport default Product;"]},"metadata":{},"sourceType":"module"}