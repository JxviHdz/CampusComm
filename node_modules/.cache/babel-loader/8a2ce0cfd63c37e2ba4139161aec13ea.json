{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joseg\\\\OneDrive\\\\Desktop\\\\CampusComm\\\\src\\\\Favourites.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport firebase, { auth } from \"./firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport HomeListingCard from \"./listingCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firestore = firebase.firestore();\n\nfunction Favourites() {\n  _s();\n\n  const [user] = useAuthState(auth); // Getting the listings from the database.\n\n  const listingsRef = firestore.collection('listings');\n  const query = listingsRef.where(\"likedBy\", \"array-contains\", user.uid); // ordering by time\n\n  const [listingsBig, loading] = useCollection(query);\n  let index;\n  let listings;\n  let docsID = []; // check if data is still being loaded\n\n  if (!loading && user) {\n    // make sure to take most recent posts\n    index = 0;\n    listings = [];\n    listingsBig.forEach(doc => {\n      var data = doc.data();\n\n      if (data.likedBy.includes(user.uid)) {\n        listings[index] = doc.data();\n        docsID[index] = doc.id;\n        index++;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 1,\n    m: 1,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 4,\n      children: !loading ? listings.length !== 0 ? listings.map((listingObj, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(HomeListingCard, {\n          listingObj: listingObj,\n          iD: docsID[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        style: {\n          marginTop: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://www.memecreator.org/static/images/memes/4722215.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          style: {\n            fontSize: \"35px\"\n          },\n          children: \"You should go \\u2764\\uFE0F some listings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Loading listings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Favourites, \"Gut1JdwwGL3ogFpfdcSp3TGCJPg=\", false, function () {\n  return [useAuthState, useCollection];\n});\n\n_c = Favourites;\nexport default Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["C:/Users/joseg/OneDrive/Desktop/CampusComm/src/Favourites.js"],"names":["React","firebase","auth","useAuthState","useCollection","Box","Grid","Typography","HomeListingCard","firestore","Favourites","user","listingsRef","collection","query","where","uid","listingsBig","loading","index","listings","docsID","forEach","doc","data","likedBy","includes","id","length","map","listingObj","iD","marginTop","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase, {auth} from \"./firebase\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {Box, Grid, Typography} from \"@material-ui/core\";\nimport HomeListingCard from \"./listingCard\";\n\nconst firestore = firebase.firestore()\n\nfunction Favourites() {\n\n    const [user] = useAuthState(auth)\n\n\n    // Getting the listings from the database.\n    const listingsRef = firestore.collection('listings');\n    const query = listingsRef.where(\"likedBy\", \"array-contains\", user.uid) // ordering by time\n\n    const [listingsBig, loading] = useCollection(query);\n\n    let index;\n    let listings;\n    let docsID = [];\n\n    // check if data is still being loaded\n    if (!loading && user) {\n        // make sure to take most recent posts\n        index = 0;\n        listings = [];\n        listingsBig.forEach(doc => {\n            var data = doc.data();\n            if (data.likedBy.includes(user.uid)) {\n                listings[index] = doc.data();\n                docsID[index] = doc.id;\n                index++;\n            }\n        })\n    }\n\n\n    return (\n        <Box p={1} m={1}>\n            <Grid container justify=\"center\" spacing={4}>\n                {!loading ? (listings.length !== 0 ? listings.map((listingObj, index) =>\n                    <Grid item>\n                        <HomeListingCard {...{listingObj: listingObj, iD: docsID[index]}} />\n                    </Grid>\n                )\n                    :\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" style={{marginTop: \"50px\"}}>\n                <img src=\"https://www.memecreator.org/static/images/memes/4722215.jpg\" />\n                    <Typography variant=\"h1\" style={{fontSize: \"35px\"}}>You should go ❤️ some listings</Typography>\n                    </Box>) : <h1> Loading listings</h1>\n                }\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Favourites"]},"metadata":{},"sourceType":"module"}