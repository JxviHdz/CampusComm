{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hernandez\\\\Documents\\\\DOCUMENTOS UNIVERSIDAD\\\\INGENIERIA DE SOFTWARE\\\\CampusComm\\\\src\\\\EditProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase, { storage } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firestore = firebase.firestore();\n\nfunction EditProduct(props) {\n  _s();\n\n  let id = props.location.state.iDListing;\n  let listingName = props.location.state.name;\n  let listingDes = props.location.state.description;\n  let listingPrice = props.location.state.price;\n  let listingUrl = props.location.state.url;\n  const listingsRef = firestore.collection('listings').doc(id);\n  const [nameVal, setFormValue] = useState(listingName);\n  const [descriptionVal, setFormValue2] = useState(listingDes);\n  const [priceVal, setFormValue3] = useState(listingPrice);\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(listingUrl); //gets image name from stored url\n\n  const getImageName = () => {\n    let baseUrl = 'https://firebasestorage.googleapis.com/v0/b/ipproject-27ae8.appspot.com/o/images%2F';\n    let imageName = url.replace(baseUrl, '');\n    let indexOfEnd = imageName.indexOf('?');\n    imageName = imageName.substring(0, indexOfEnd);\n    return imageName;\n  };\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const uploadImg = () => {\n    const uploadImg = storage.ref('images/' + image.name).put(image);\n    uploadImg.on(\"state_changed\", snapshot => {}, error => {\n      console.log(error);\n    }, () => {\n      storage.ref('images').child(image.name).getDownloadURL().then(url => {\n        setUrl(url);\n      });\n    });\n  };\n\n  const updateListing = async e => {\n    e.preventDefault();\n    await listingsRef.update({\n      name: nameVal,\n      description: descriptionVal,\n      price: priceVal,\n      imgUrl: url\n    });\n    console.log(\"product submitted\"); // dunno what this does but I assume it resets the text fields\n\n    setFormValue('');\n    setFormValue2('');\n    setFormValue3('');\n    setImage(null);\n    setUrl(''); //Should redirect back to home page\n\n    window.location.href = \"/\";\n  }; //deletes image and listing\n\n\n  const deleteListing = async e => {\n    try {\n      // Obtener el nombre de la imagen\n      let imageName = getImageName();\n      let storageRef = storage.ref('images').child(imageName); // Eliminar la imagen del almacenamiento\n\n      await storageRef.delete();\n      console.log(`Imagen ${imageName} eliminada del almacenamiento.`); // Eliminar el listado (documento especÃ­fico)\n\n      await listingsRef.delete();\n      console.log(\"Listado eliminado de la base de datos.\"); // Redirigir al usuario\n\n      window.location.href = \"/\";\n    } catch (error) {\n      console.error(\"Error al eliminar el listado o la imagen:\", error);\n      alert(\"Hubo un problema al eliminar el listado. Por favor, intenta nuevamente.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: updateListing,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label1\",\n      children: \"Nombre: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      value: nameVal,\n      onChange: e => setFormValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label2\",\n      children: \"Precio: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      value: priceVal,\n      onChange: e => setFormValue3(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label1\",\n      children: \"Descripcion: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"description\",\n      placeholder: \"Describe your product here\",\n      value: descriptionVal,\n      onChange: e => setFormValue2(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label1\",\n      children: \"Subir imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"fileInput\",\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fileUploadButton\",\n      type: \"button\",\n      onClick: uploadImg,\n      children: \"Subir imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"react logo\",\n      className: \"productImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      children: \"Actualizar listado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteListing,\n      type: \"button\",\n      children: \"Eliminar listado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProduct, \"4GxoEMzEagXi1L2kfRro+DCuKXU=\");\n\n_c = EditProduct;\nexport default EditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"sources":["C:/Users/Hernandez/Documents/DOCUMENTOS UNIVERSIDAD/INGENIERIA DE SOFTWARE/CampusComm/src/EditProduct.js"],"names":["React","useState","firebase","storage","firestore","EditProduct","props","id","location","state","iDListing","listingName","name","listingDes","description","listingPrice","price","listingUrl","url","listingsRef","collection","doc","nameVal","setFormValue","descriptionVal","setFormValue2","priceVal","setFormValue3","image","setImage","setUrl","getImageName","baseUrl","imageName","replace","indexOfEnd","indexOf","substring","handleChange","e","target","files","uploadImg","ref","put","on","snapshot","error","console","log","child","getDownloadURL","then","updateListing","preventDefault","update","imgUrl","window","href","deleteListing","storageRef","delete","alert","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport firebase, {storage} from './firebase';\n\nconst firestore = firebase.firestore();\n\nfunction EditProduct(props) {\n    let id = props.location.state.iDListing;\n    let listingName = props.location.state.name;\n    let listingDes = props.location.state.description;\n    let listingPrice = props.location.state.price;\n    let listingUrl = props.location.state.url;\n\n    const listingsRef = firestore.collection('listings').doc(id);\n\n\n    const [nameVal, setFormValue] = useState(listingName);\n    const [descriptionVal, setFormValue2] = useState(listingDes);\n    const [priceVal, setFormValue3] = useState(listingPrice);\n    const [image, setImage] = useState(null);\n    const [url, setUrl] = useState(listingUrl);\n\n    //gets image name from stored url\n    const getImageName = () => {\n        let baseUrl = 'https://firebasestorage.googleapis.com/v0/b/ipproject-27ae8.appspot.com/o/images%2F';\n        let imageName = url.replace(baseUrl, '');\n        let indexOfEnd = imageName.indexOf('?');\n        imageName = imageName.substring(0, indexOfEnd);\n        return imageName\n    }\n\n    const handleChange = e => {\n        if (e.target.files[0]) {\n            setImage(e.target.files[0]);\n        }\n    }\n\n    const uploadImg = () => {\n        const uploadImg = storage.ref('images/' + image.name).put(image);\n\n        uploadImg.on(\"state_changed\", snapshot => {\n            }, error => {\n                console.log(error);\n            },\n            () => {\n                storage.ref('images').child(image.name).getDownloadURL().then(url => {\n                    setUrl(url);\n                });\n            });\n    }\n\n    const updateListing = async (e) => {\n        e.preventDefault();\n\n        await listingsRef.update({\n            name: nameVal,\n            description: descriptionVal,\n            price: priceVal,\n            imgUrl: url\n        });\n        console.log(\"product submitted\")\n\n        // dunno what this does but I assume it resets the text fields\n        setFormValue('');\n        setFormValue2('');\n        setFormValue3('');\n        setImage(null);\n        setUrl('');\n\n        //Should redirect back to home page\n        window.location.href = \"/\";\n    }\n\n    //deletes image and listing\n    const deleteListing = async (e) => {\n        try {\n            // Obtener el nombre de la imagen\n            let imageName = getImageName();\n            let storageRef = storage.ref('images').child(imageName);\n    \n            // Eliminar la imagen del almacenamiento\n            await storageRef.delete();\n            console.log(`Imagen ${imageName} eliminada del almacenamiento.`);\n    \n            // Eliminar el listado (documento especÃ­fico)\n            await listingsRef.delete();\n            console.log(\"Listado eliminado de la base de datos.\");\n    \n            // Redirigir al usuario\n            window.location.href = \"/\";\n        } catch (error) {\n            console.error(\"Error al eliminar el listado o la imagen:\", error);\n            alert(\"Hubo un problema al eliminar el listado. Por favor, intenta nuevamente.\");\n        }\n    };\n    \n    return (\n        <form className='form' onSubmit={updateListing}>\n            <label className='label1'>Nombre: </label><input className=\"input\" type=\"text\" value={nameVal}\n                                                           onChange={(e) => setFormValue(e.target.value)}/>\n            <label className='label2'>Precio: </label><input className=\"input\" type=\"text\" value={priceVal}\n                                                            onChange={(e) => setFormValue3(e.target.value)}/>\n            <label className='label1'>Descripcion: </label><textarea className=\"description\"\n                                                                     placeholder=\"Describe your product here\"\n                                                                     value={descriptionVal}\n                                                                     onChange={(e) => setFormValue2(e.target.value)}/>\n            <label className='label1'>Subir imagen</label><input className=\"fileInput\" type=\"file\"\n                                                                 onChange={handleChange}/>\n            <button className='fileUploadButton' type=\"button\" onClick={uploadImg}>Subir imagen</button>\n            <img src={url} alt='react logo' className='productImage'/>\n            <button className='button' type=\"submit\">Actualizar listado</button>\n            <button onClick={deleteListing} type={\"button\"}>Eliminar listado</button>\n        </form>\n    )\n}\n\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}