{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hernandez\\\\Documents\\\\DOCUMENTOS UNIVERSIDAD\\\\INGENIERIA DE SOFTWARE\\\\CampusComm\\\\src\\\\authentication\\\\signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Avatar, Box, Button, Checkbox, FormControlLabel, Grid, Paper, TextField, Tooltip, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"./Menu\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport firebaseConfig, { auth, storage } from \"../firebase\";\nimport firebase from \"firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport brandLogo from \"../img/Brandlogo.svg\";\nimport Zoom from '@material-ui/core/Zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const classes = useStyles();\n  const [emptyValues, setEmptyValues] = useState({\n    firstName: false,\n    lastName: false,\n    email: false,\n    password: false,\n    passwordConfirm: false,\n    university: false,\n    privacyPolicy: false\n  });\n  const [values, setValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    university: \"\",\n    privacyPolicy: false\n  });\n  const [pp, setPP] = useState(null);\n  const [ppFile, setPPFile] = useState(\"\");\n  let ppUrl = \"\";\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n    setEmptyValues({ ...emptyValues,\n      [prop]: false\n    });\n  };\n\n  const handleChangeCheckbox = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.checked\n    });\n    setEmptyValues({ ...emptyValues,\n      [prop]: false\n    });\n  };\n\n  const handleChangeUni = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.innerHTML\n    });\n  }; // generates random alphanumeric file name of length 25\n\n\n  const generateFileName = () => {\n    let fileName = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n\n    for (let i = 0; i < 25; i++) {\n      fileName += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return fileName;\n  }; //gets the file extension from the image name\n\n\n  const getFileExtension = image => {\n    let fileExtension = '';\n\n    for (let i = image.name.length; i > 0; i--) {\n      if (image.name.charAt(i) === '.') {\n        fileExtension = image.name.charAt(i) + fileExtension;\n        break;\n      } else {\n        fileExtension = image.name.charAt(i) + fileExtension;\n      }\n    }\n\n    return fileExtension;\n  };\n\n  async function uploadImage(image, firstImage, lastImage) {\n    let fileName = generateFileName();\n    let fileExtension = getFileExtension(image);\n    let storageRef = storage.ref('profilePictures/' + fileName + fileExtension);\n    return new Promise(function (resolve, reject) {\n      const uploadImg = storageRef.put(image);\n      uploadImg.on(\"state_changed\", snapshot => {\n        console.log(\"uploading\");\n      }, error => {\n        return reject(error);\n      }, () => {\n        return resolve(uploadImg);\n      });\n    }).then(async function (uploadImg) {\n      await uploadImg.ref.getDownloadURL().then(url => {\n        ppUrl = url;\n      });\n    });\n  }\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const handleSubmit = async () => {\n    let anyEmpty = false;\n\n    for (let i in values) {\n      if (values[i] === false || values[i] === \"\") {\n        setEmptyValues(prevState => ({ ...prevState,\n          [i]: true\n        }));\n        anyEmpty = true;\n      }\n    }\n\n    if (anyEmpty) return;\n\n    try {\n      if (values.email.includes(\".ac\") || values.email.includes(\".edu\") || values.email.includes(\"drept.unibuc.ro\") || values.email.includes(\"utcluj.didatec.ro\")) {\n        if (values.password === values.passwordConfirm) {\n          const new_user = await firebaseConfig.auth().createUserWithEmailAndPassword(values.email, values.password);\n          await auth.currentUser.updateProfile({\n            displayName: values.firstName + \" \" + values.lastName\n          });\n\n          if (pp != null) {\n            await uploadImage(pp, true, true);\n          }\n\n          const userid = auth.currentUser.uid;\n          const db = firebase.firestore();\n          await db.collection('users').doc(userid).set({\n            ID: userid,\n            Name: values.firstName,\n            LastName: values.lastName,\n            University: values.university,\n            chatsNo: 0,\n            profilePicture: ppUrl\n          });\n\n          if (new_user.user != null) {\n            await new_user.user.sendEmailVerification();\n            alert(\"Verification email sent.\");\n          } else {\n            alert('user null');\n          }\n\n          setCurrentUser(true);\n        } else {\n          throw 'Passwords do not match';\n        }\n      } else {\n        throw 'Email is not a university email!';\n      }\n    } catch (error) {\n      alert(error);\n    }\n\n    firebaseConfig.auth().signOut();\n  };\n\n  if (currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 16\n    }, this);\n  }\n\n  function handleChangeImage() {\n    const preview = document.getElementById(`profilePicture`);\n    const file = document.querySelector('input[type=file]').files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', function () {\n      setPPFile(reader.result);\n    }, false);\n\n    if (file && file.type.match('image.*')) {\n      reader.readAsDataURL(file);\n      setPP(file);\n    } else {\n      alert('Please only upload images');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    style: {\n      margin: 30\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          margin: \"auto\"\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Box, {\n          p: 3,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: brandLogo,\n              alt: \"brand logo\",\n              width: 40,\n              height: 40\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              style: {\n                fontSize: \"35px\",\n                marginLeft: \"10px\"\n              },\n              children: \"CampusComm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              margin: \"auto\",\n              marginBottom: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              textAlign: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                id: \"upload_button\",\n                variant: \"text\",\n                component: \"label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"upload-photo\",\n                  name: \"upload-photo\",\n                  type: \"file\",\n                  hidden: true,\n                  onChange: () => {\n                    handleChangeImage();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: \"brand logo\",\n                    className: classes.uploadImage,\n                    id: \"profilePicture\",\n                    src: ppFile,\n                    style: {\n                      display: \"inline-block\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    style: {\n                      marginTop: \"-32px\",\n                      marginBottom: \"15px\",\n                      zIndex: 5,\n                      color: \"#fafafa\",\n                      display: \"inline-block\"\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: emptyValues.firstName,\n                fullWidth: true,\n                required: true,\n                value: values.firstName,\n                id: \"First-Name\",\n                label: \"First Name\",\n                variant: \"outlined\",\n                color: \"primary\",\n                onChange: handleChange(\"firstName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: emptyValues.lastName,\n                fullWidth: true,\n                required: true,\n                value: values.lastName,\n                id: \"Last-Name\",\n                label: \"Last Name\",\n                variant: \"outlined\",\n                color: \"primary\",\n                onChange: handleChange(\"lastName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: emptyValues.email,\n            fullWidth: true,\n            required: true,\n            value: values.email,\n            id: \"Email\",\n            label: \"Academic Email Address\",\n            variant: \"outlined\",\n            color: \"primary\",\n            style: {\n              marginTop: 10\n            },\n            onChange: handleChange(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: emptyValues.password,\n            fullWidth: true,\n            required: true,\n            value: values.password,\n            type: \"password\",\n            id: \"Password\",\n            label: \"Password\",\n            variant: \"outlined\",\n            color: \"primary\",\n            style: {\n              marginTop: 10\n            },\n            onChange: handleChange(\"password\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: emptyValues.passwordConfirm,\n            fullWidth: true,\n            required: true,\n            type: \"password\",\n            value: values.passwordConfirm,\n            id: \"Password-Confirm\",\n            label: \"Re-enter Password\",\n            variant: \"outlined\",\n            color: \"primary\",\n            style: {\n              marginTop: 10\n            },\n            onChange: handleChange(\"passwordConfirm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"University\",\n            options: unis,\n            getOptionLabel: option => option.name,\n            style: {\n              marginTop: 10\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"University\",\n              variant: \"outlined\",\n              required: true,\n              error: emptyValues.university,\n              value: values.university,\n              onChange: handleChange(\"university\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 33\n            }, this),\n            onChange: handleChangeUni(\"university\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              onClick: () => {\n                handleSubmit();\n              },\n              children: \"Registrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                checked: values.privacyPolicy,\n                onChange: handleChangeCheckbox(\"privacyPolicy\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 42\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    display: \"inLine\",\n                    marginRight: \"4px\"\n                  },\n                  color: emptyValues.privacyPolicy ? \"error\" : \"textSecondary\",\n                  children: \"Estoy de acuerdo con la\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  TransitionComponent: Zoom,\n                  title: \"By checking the box you agree to our terms and conditions regarding personal data collection in accordance to the General Data Protection Act. Our team will need your university email account and name. This data will be stored in order to ensure a safe environment for our users when interacting with each other. This data will not be publicly made anywhere else. Other users will have access (be able to see on the platform) your name but nothing else. The email will be available only to us. Please note that if you have any concerns regarding the data collected about yourself, or if you wish to see all data which has been collected about yourself, you can email us at pap36@bath.ac.uk . If you decide to delete your profile, all the data about you will be deleted, but you can also request this personally by mailing us at the above address. Finally, we will delete all data stored about you after the 30th of April 2021 (30.04.2021), unless you specifically ask us to by emailing the above address.\",\n                  style: {\n                    display: \"inLine\",\n                    textDecoration: 'underline'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: emptyValues.privacyPolicy ? \"error\" : \"textSecondary\",\n                    children: \"politica de privacidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    display: \"inLine\",\n                    marginLeft: \"4px\"\n                  },\n                  color: emptyValues.privacyPolicy ? \"error\" : \"textSecondary\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true),\n              style: {\n                marginLeft: \"10px\"\n              },\n              labelPlacement: \"end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"LfLG64a8torbg5ABv9Y5w/wj0eM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Signup;\nconst unis = [{\n  name: \"Universidad de Córdoba\"\n}];\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/Hernandez/Documents/DOCUMENTOS UNIVERSIDAD/INGENIERIA DE SOFTWARE/CampusComm/src/authentication/signup.js"],"names":["React","useState","Avatar","Box","Button","Checkbox","FormControlLabel","Grid","Paper","TextField","Tooltip","Typography","useStyles","Autocomplete","firebaseConfig","auth","storage","firebase","Redirect","Zoom","Signup","classes","emptyValues","setEmptyValues","firstName","lastName","email","password","passwordConfirm","university","privacyPolicy","values","setValues","pp","setPP","ppFile","setPPFile","ppUrl","handleChange","prop","event","target","value","handleChangeCheckbox","checked","handleChangeUni","innerHTML","generateFileName","fileName","characters","charactersLength","length","i","charAt","Math","floor","random","getFileExtension","image","fileExtension","name","uploadImage","firstImage","lastImage","storageRef","ref","Promise","resolve","reject","uploadImg","put","on","snapshot","console","log","error","then","getDownloadURL","url","currentUser","setCurrentUser","handleSubmit","anyEmpty","prevState","includes","new_user","createUserWithEmailAndPassword","updateProfile","displayName","userid","uid","db","firestore","collection","doc","set","ID","Name","LastName","University","chatsNo","profilePicture","user","sendEmailVerification","alert","signOut","handleChangeImage","preview","document","getElementById","file","querySelector","files","reader","FileReader","addEventListener","result","type","match","readAsDataURL","margin","brandLogo","fontSize","marginLeft","marginBottom","display","marginTop","zIndex","color","unis","option","params","marginRight","textDecoration"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,MADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,QAJJ,EAKIC,gBALJ,EAMIC,IANJ,EAOIC,KAPJ,EAQIC,SARJ,EASIC,OATJ,EAUIC,UAVJ,QAWO,mBAXP;AAYA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,cAAP,IAAyBC,IAAzB,EAA+BC,OAA/B,QAA8C,aAA9C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC;AAC3CuB,IAAAA,SAAS,EAAE,KADgC;AAE3CC,IAAAA,QAAQ,EAAE,KAFiC;AAG3CC,IAAAA,KAAK,EAAE,KAHoC;AAI3CC,IAAAA,QAAQ,EAAE,KAJiC;AAK3CC,IAAAA,eAAe,EAAE,KAL0B;AAM3CC,IAAAA,UAAU,EAAE,KAN+B;AAO3CC,IAAAA,aAAa,EAAE;AAP4B,GAAD,CAA9C;AAUA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC;AACjCuB,IAAAA,SAAS,EAAE,EADsB;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,QAAQ,EAAE,EAJuB;AAKjCC,IAAAA,eAAe,EAAE,EALgB;AAMjCC,IAAAA,UAAU,EAAE,EANqB;AAOjCC,IAAAA,aAAa,EAAE;AAPkB,GAAD,CAApC;AAUA,QAAM,CAACG,EAAD,EAAKC,KAAL,IAAcjC,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIoC,KAAK,GAAG,EAAZ;;AAEA,QAAMC,YAAY,GAAIC,IAAD,IAAWC,KAAD,IAAW;AACtCR,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACQ,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAAlC,KAAD,CAAT;AACAnB,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,OAACiB,IAAD,GAAQ;AAA1B,KAAD,CAAd;AACH,GAHD;;AAIA,QAAMI,oBAAoB,GAAIJ,IAAD,IAAWC,KAAD,IAAW;AAC9CR,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACQ,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaG;AAAlC,KAAD,CAAT;AACArB,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,OAACiB,IAAD,GAAQ;AAA1B,KAAD,CAAd;AACH,GAHD;;AAKA,QAAMM,eAAe,GAAIN,IAAD,IAAWC,KAAD,IAAW;AACzCR,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACQ,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaK;AAAlC,KAAD,CAAT;AACH,GAFD,CApCc,CAyCd;;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,UAAU,GAAG,gEAAjB;AACA,QAAIC,gBAAgB,GAAGD,UAAU,CAACE,MAAlC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBJ,MAAAA,QAAQ,IAAIC,UAAU,CAACI,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,gBAA3B,CAAlB,CAAZ;AACH;;AACD,WAAOF,QAAP;AACH,GARD,CA1Cc,CAoDd;;;AACA,QAAMS,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAIC,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIP,CAAC,GAAGM,KAAK,CAACE,IAAN,CAAWT,MAAxB,EAAgCC,CAAC,GAAG,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AACxC,UAAIM,KAAK,CAACE,IAAN,CAAWP,MAAX,CAAkBD,CAAlB,MAAyB,GAA7B,EAAkC;AAC9BO,QAAAA,aAAa,GAAGD,KAAK,CAACE,IAAN,CAAWP,MAAX,CAAkBD,CAAlB,IAAuBO,aAAvC;AACA;AACH,OAHD,MAGO;AACHA,QAAAA,aAAa,GAAGD,KAAK,CAACE,IAAN,CAAWP,MAAX,CAAkBD,CAAlB,IAAuBO,aAAvC;AACH;AACJ;;AACD,WAAOA,aAAP;AACH,GAXD;;AAaA,iBAAeE,WAAf,CAA2BH,KAA3B,EAAkCI,UAAlC,EAA8CC,SAA9C,EAAyD;AAErD,QAAIf,QAAQ,GAAGD,gBAAgB,EAA/B;AAEA,QAAIY,aAAa,GAAGF,gBAAgB,CAACC,KAAD,CAApC;AAEA,QAAIM,UAAU,GAAGhD,OAAO,CAACiD,GAAR,CAAY,qBAAqBjB,QAArB,GAAgCW,aAA5C,CAAjB;AAEA,WAAO,IAAIO,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,YAAMC,SAAS,GAAGL,UAAU,CAACM,GAAX,CAAeZ,KAAf,CAAlB;AAEAW,MAAAA,SAAS,CAACE,EAAV,CAAa,eAAb,EACKC,QAAD,IAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,OAHL,EAGQC,KAAD,IAAW;AACV,eAAOP,MAAM,CAACO,KAAD,CAAb;AACH,OALL,EAMI,MAAM;AACF,eAAOR,OAAO,CAACE,SAAD,CAAd;AACH,OARL;AAUH,KAbM,EAaJO,IAbI,CAaC,gBAAgBP,SAAhB,EAA2B;AAC/B,YAAMA,SAAS,CAACJ,GAAV,CAAcY,cAAd,GAA+BD,IAA/B,CAAoCE,GAAG,IAAI;AAC7CzC,QAAAA,KAAK,GAAGyC,GAAR;AACH,OAFK,CAAN;AAGH,KAjBM,CAAP;AAqBH;;AAED,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC/E,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMgF,YAAY,GAAG,YAAY;AAE7B,QAAIC,QAAQ,GAAG,KAAf;;AAEA,SAAK,IAAI9B,CAAT,IAAcrB,MAAd,EAAsB;AAClB,UAAIA,MAAM,CAACqB,CAAD,CAAN,KAAc,KAAd,IAAuBrB,MAAM,CAACqB,CAAD,CAAN,KAAc,EAAzC,EAA6C;AACzC7B,QAAAA,cAAc,CAAC4D,SAAS,KAAK,EAAE,GAAGA,SAAL;AAAgB,WAAC/B,CAAD,GAAK;AAArB,SAAL,CAAV,CAAd;AACA8B,QAAAA,QAAQ,GAAG,IAAX;AACH;AACJ;;AAED,QAAIA,QAAJ,EAAc;;AAEd,QAAI;AACA,UAAKnD,MAAM,CAACL,KAAP,CAAa0D,QAAb,CAAsB,KAAtB,KAAgCrD,MAAM,CAACL,KAAP,CAAa0D,QAAb,CAAsB,MAAtB,CAAhC,IAAiErD,MAAM,CAACL,KAAP,CAAa0D,QAAb,CAAsB,iBAAtB,CAAjE,IACErD,MAAM,CAACL,KAAP,CAAa0D,QAAb,CAAsB,mBAAtB,CADP,EACoD;AAChD,YAAIrD,MAAM,CAACJ,QAAP,KAAoBI,MAAM,CAACH,eAA/B,EAAgD;AAC5C,gBAAMyD,QAAQ,GAAG,MAAMvE,cAAc,CAACC,IAAf,GAAsBuE,8BAAtB,CAAqDvD,MAAM,CAACL,KAA5D,EAAmEK,MAAM,CAACJ,QAA1E,CAAvB;AACA,gBAAMZ,IAAI,CAACgE,WAAL,CAAiBQ,aAAjB,CAA+B;AAAEC,YAAAA,WAAW,EAAEzD,MAAM,CAACP,SAAP,GAAmB,GAAnB,GAAyBO,MAAM,CAACN;AAA/C,WAA/B,CAAN;;AACA,cAAIQ,EAAE,IAAI,IAAV,EAAgB;AACZ,kBAAM4B,WAAW,CAAC5B,EAAD,EAAK,IAAL,EAAW,IAAX,CAAjB;AACH;;AACD,gBAAMwD,MAAM,GAAG1E,IAAI,CAACgE,WAAL,CAAiBW,GAAhC;AACA,gBAAMC,EAAE,GAAG1E,QAAQ,CAAC2E,SAAT,EAAX;AACA,gBAAMD,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BL,MAA3B,EAAmCM,GAAnC,CAAuC;AACzCC,YAAAA,EAAE,EAAEP,MADqC;AAEzCQ,YAAAA,IAAI,EAAElE,MAAM,CAACP,SAF4B;AAGzC0E,YAAAA,QAAQ,EAAEnE,MAAM,CAACN,QAHwB;AAIzC0E,YAAAA,UAAU,EAAEpE,MAAM,CAACF,UAJsB;AAKzCuE,YAAAA,OAAO,EAAE,CALgC;AAMzCC,YAAAA,cAAc,EAAEhE;AANyB,WAAvC,CAAN;;AAQA,cAAIgD,QAAQ,CAACiB,IAAT,IAAiB,IAArB,EAA2B;AACvB,kBAAMjB,QAAQ,CAACiB,IAAT,CAAcC,qBAAd,EAAN;AACAC,YAAAA,KAAK,CAAC,0BAAD,CAAL;AACH,WAHD,MAGO;AACHA,YAAAA,KAAK,CAAC,WAAD,CAAL;AACH;;AACDxB,UAAAA,cAAc,CAAC,IAAD,CAAd;AACH,SAvBD,MAuBO;AACH,gBAAM,wBAAN;AACH;AACJ,OA5BD,MA4BO;AACH,cAAM,kCAAN;AACH;AACJ,KAhCD,CAgCE,OAAOL,KAAP,EAAc;AACZ6B,MAAAA,KAAK,CAAC7B,KAAD,CAAL;AACH;;AAED7D,IAAAA,cAAc,CAACC,IAAf,GAAsB0F,OAAtB;AAEH,GAnDD;;AAqDA,MAAI1B,WAAJ,EAAiB;AACb,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,WAAS2B,iBAAT,GAA6B;AACzB,UAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAyB,gBAAzB,CAAhB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACG,aAAT,CAAuB,kBAAvB,EAA2CC,KAA3C,CAAiD,CAAjD,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AAEAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC/E,MAAAA,SAAS,CAAC6E,MAAM,CAACG,MAAR,CAAT;AACH,KAFD,EAEG,KAFH;;AAIA,QAAIN,IAAI,IAAIA,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgB,SAAhB,CAAZ,EAAwC;AACpCL,MAAAA,MAAM,CAACM,aAAP,CAAqBT,IAArB;AACA5E,MAAAA,KAAK,CAAC4E,IAAD,CAAL;AACH,KAHD,MAGO;AACHN,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;AACJ;;AAED,sBACI,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,QAAnC;AAA4C,IAAA,UAAU,EAAC,QAAvD;AAAgE,IAAA,KAAK,EAAE;AAAEgB,MAAAA,MAAM,EAAE;AAAV,KAAvE;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,WAAxB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAd;AAAA,qCACI,QAAC,GAAD;AAAK,UAAA,CAAC,EAAE,CAAR;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,OAAO,EAAE,MAAd;AAAsB,YAAA,cAAc,EAAE,QAAtC;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEC,SAAV;AAAqB,cAAA,GAAG,EAAC,YAAzB;AAAsC,cAAA,KAAK,EAAE,EAA7C;AAAiD,cAAA,MAAM,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,KAAK,EAAE;AAAEC,gBAAAA,QAAQ,EAAE,MAAZ;AAAoBC,gBAAAA,UAAU,EAAE;AAAhC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEH,cAAAA,MAAM,EAAE,MAAV;AAAkBI,cAAAA,YAAY,EAAE;AAAhC,aAAZ;AAAA,mCACI,QAAC,GAAD;AAAK,cAAA,OAAO,EAAC,MAAb;AAAoB,cAAA,SAAS,EAAC,QAA9B;AAAuC,cAAA,UAAU,EAAC,QAAlD;AAA2D,cAAA,aAAa,EAAE,QAA1E;AAAA,qCACI,QAAC,MAAD;AACI,gBAAA,EAAE,EAAC,eADP;AAEI,gBAAA,OAAO,EAAC,MAFZ;AAGI,gBAAA,SAAS,EAAC,OAHd;AAAA,wCAKI;AACI,kBAAA,EAAE,EAAC,cADP;AAEI,kBAAA,IAAI,EAAC,cAFT;AAGI,kBAAA,IAAI,EAAC,MAHT;AAII,kBAAA,MAAM,MAJV;AAKI,kBAAA,QAAQ,EAAE,MAAM;AACZlB,oBAAAA,iBAAiB;AACpB;AAPL;AAAA;AAAA;AAAA;AAAA,wBALJ,eAcI,QAAC,GAAD;AAAK,kBAAA,OAAO,EAAC,MAAb;AAAoB,kBAAA,SAAS,EAAC,QAA9B;AAAuC,kBAAA,UAAU,EAAC,QAAlD;AAA2D,kBAAA,aAAa,EAAE,QAA1E;AAAA,0CACI,QAAC,MAAD;AAAQ,oBAAA,GAAG,EAAC,YAAZ;AAAyB,oBAAA,SAAS,EAAErF,OAAO,CAACwC,WAA5C;AAAyD,oBAAA,EAAE,EAAC,gBAA5D;AACI,oBAAA,GAAG,EAAE1B,MADT;AACiB,oBAAA,KAAK,EAAE;AAAE0F,sBAAAA,OAAO,EAAE;AAAX;AADxB;AAAA;AAAA;AAAA;AAAA,0BADJ,eAGI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAE,OAArB;AAA8B,oBAAA,KAAK,EAAE;AACjCC,sBAAAA,SAAS,EAAE,OADsB;AAEjCF,sBAAAA,YAAY,EAAE,MAFmB;AAGjCG,sBAAAA,MAAM,EAAE,CAHyB;AAIjCC,sBAAAA,KAAK,EAAE,SAJ0B;AAKjCH,sBAAAA,OAAO,EAAE;AALwB,qBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATJ,eA0CI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,KAAK,EAAEvG,WAAW,CAACE,SADvB;AAEI,gBAAA,SAAS,MAFb;AAGI,gBAAA,QAAQ,MAHZ;AAII,gBAAA,KAAK,EAAEO,MAAM,CAACP,SAJlB;AAKI,gBAAA,EAAE,EAAC,YALP;AAMI,gBAAA,KAAK,EAAC,YANV;AAOI,gBAAA,OAAO,EAAC,UAPZ;AAQI,gBAAA,KAAK,EAAC,SARV;AASI,gBAAA,QAAQ,EAAEc,YAAY,CAAC,WAAD;AAT1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAcI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,KAAK,EAAEhB,WAAW,CAACG,QADvB;AAEI,gBAAA,SAAS,MAFb;AAGI,gBAAA,QAAQ,MAHZ;AAII,gBAAA,KAAK,EAAEM,MAAM,CAACN,QAJlB;AAKI,gBAAA,EAAE,EAAC,WALP;AAMI,gBAAA,KAAK,EAAC,WANV;AAOI,gBAAA,OAAO,EAAC,UAPZ;AAQI,gBAAA,KAAK,EAAC,SARV;AASI,gBAAA,QAAQ,EAAEa,YAAY,CAAC,UAAD;AAT1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1CJ,eAsEI,QAAC,SAAD;AACI,YAAA,KAAK,EAAEhB,WAAW,CAACI,KADvB;AAEI,YAAA,SAAS,MAFb;AAGI,YAAA,QAAQ,MAHZ;AAII,YAAA,KAAK,EAAEK,MAAM,CAACL,KAJlB;AAKI,YAAA,EAAE,EAAC,OALP;AAMI,YAAA,KAAK,EAAC,wBANV;AAOI,YAAA,OAAO,EAAC,UAPZ;AAQI,YAAA,KAAK,EAAC,SARV;AASI,YAAA,KAAK,EAAE;AAAEoG,cAAAA,SAAS,EAAE;AAAb,aATX;AAUI,YAAA,QAAQ,EAAExF,YAAY,CAAC,OAAD;AAV1B;AAAA;AAAA;AAAA;AAAA,kBAtEJ,eAkFI,QAAC,SAAD;AACI,YAAA,KAAK,EAAEhB,WAAW,CAACK,QADvB;AAEI,YAAA,SAAS,MAFb;AAGI,YAAA,QAAQ,MAHZ;AAII,YAAA,KAAK,EAAEI,MAAM,CAACJ,QAJlB;AAKI,YAAA,IAAI,EAAC,UALT;AAMI,YAAA,EAAE,EAAC,UANP;AAOI,YAAA,KAAK,EAAC,UAPV;AAQI,YAAA,OAAO,EAAC,UARZ;AASI,YAAA,KAAK,EAAC,SATV;AAUI,YAAA,KAAK,EAAE;AAAEmG,cAAAA,SAAS,EAAE;AAAb,aAVX;AAWI,YAAA,QAAQ,EAAExF,YAAY,CAAC,UAAD;AAX1B;AAAA;AAAA;AAAA;AAAA,kBAlFJ,eA+FI,QAAC,SAAD;AACI,YAAA,KAAK,EAAEhB,WAAW,CAACM,eADvB;AAEI,YAAA,SAAS,MAFb;AAGI,YAAA,QAAQ,MAHZ;AAII,YAAA,IAAI,EAAC,UAJT;AAKI,YAAA,KAAK,EAAEG,MAAM,CAACH,eALlB;AAMI,YAAA,EAAE,EAAC,kBANP;AAOI,YAAA,KAAK,EAAC,mBAPV;AAQI,YAAA,OAAO,EAAC,UARZ;AASI,YAAA,KAAK,EAAC,SATV;AAUI,YAAA,KAAK,EAAE;AAAEkG,cAAAA,SAAS,EAAE;AAAb,aAVX;AAWI,YAAA,QAAQ,EAAExF,YAAY,CAAC,iBAAD;AAX1B;AAAA;AAAA;AAAA;AAAA,kBA/FJ,eA4GI,QAAC,YAAD;AACI,YAAA,EAAE,EAAC,YADP;AAEI,YAAA,OAAO,EAAE2F,IAFb;AAGI,YAAA,cAAc,EAAGC,MAAD,IAAYA,MAAM,CAACtE,IAHvC;AAII,YAAA,KAAK,EAAE;AAAEkE,cAAAA,SAAS,EAAE;AAAb,aAJX;AAKI,YAAA,WAAW,EAAGK,MAAD,iBACT,QAAC,SAAD,OAAeA,MAAf;AAAuB,cAAA,KAAK,EAAC,YAA7B;AAA0C,cAAA,OAAO,EAAC,UAAlD;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,KAAK,EAAE7G,WAAW,CAACO,UAFvB;AAGI,cAAA,KAAK,EAAEE,MAAM,CAACF,UAHlB;AAII,cAAA,QAAQ,EAAES,YAAY,CAAC,YAAD;AAJ1B;AAAA;AAAA;AAAA;AAAA,oBANR;AAWI,YAAA,QAAQ,EAAEO,eAAe,CAAC,YAAD;AAX7B;AAAA;AAAA;AAAA;AAAA,kBA5GJ,eA0HI,QAAC,GAAD;AAAK,YAAA,cAAc,EAAC,QAApB;AAA6B,YAAA,UAAU,EAAC,QAAxC;AAAiD,YAAA,KAAK,EAAE;AAAEiF,cAAAA,SAAS,EAAE;AAAb,aAAxD;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,cAAA,KAAK,EAAC,SAAjC;AACI,cAAA,OAAO,EAAE,MAAM;AACX7C,gBAAAA,YAAY;AACf,eAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,gBAAD;AACI,cAAA,OAAO,eAAE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE,SAAjB;AAA4B,gBAAA,OAAO,EAAElD,MAAM,CAACD,aAA5C;AAA2D,gBAAA,QAAQ,EAAEa,oBAAoB,CAAC,eAAD;AAAzF;AAAA;AAAA;AAAA;AAAA,sBADb;AAEI,cAAA,KAAK,eACD;AAAA,wCACI,QAAC,UAAD;AAAY,kBAAA,KAAK,EAAE;AAAEkF,oBAAAA,OAAO,EAAE,QAAX;AAAqBO,oBAAAA,WAAW,EAAE;AAAlC,mBAAnB;AAA8D,kBAAA,KAAK,EAAE9G,WAAW,CAACQ,aAAZ,GAA4B,OAA5B,GAAsC,eAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,OAAD;AAAS,kBAAA,mBAAmB,EAAEX,IAA9B;AAAoC,kBAAA,KAAK,EAAE,8+BAA3C;AAA2hC,kBAAA,KAAK,EAAE;AAAE0G,oBAAAA,OAAO,EAAE,QAAX;AAAqBQ,oBAAAA,cAAc,EAAE;AAArC,mBAAliC;AAAA,yCACI,QAAC,UAAD;AAAY,oBAAA,KAAK,EAAE/G,WAAW,CAACQ,aAAZ,GAA4B,OAA5B,GAAsC,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ,eASI,QAAC,UAAD;AAAY,kBAAA,KAAK,EAAE;AAAE+F,oBAAAA,OAAO,EAAE,QAAX;AAAqBF,oBAAAA,UAAU,EAAE;AAAjC,mBAAnB;AAA6D,kBAAA,KAAK,EAAErG,WAAW,CAACQ,aAAZ,GAA4B,OAA5B,GAAsC,eAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA,8BAHR;AAiBI,cAAA,KAAK,EAAE;AAAE6F,gBAAAA,UAAU,EAAE;AAAd,eAjBX;AAkBI,cAAA,cAAc,EAAC;AAlBnB;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1HJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgKH;;GA5UQvG,M;UACWR,S;;;KADXQ,M;AA8UT,MAAM6G,IAAI,GAAG,CACT;AAAErE,EAAAA,IAAI,EAAE;AAAR,CADS,CAAb;AAIA,eAAexC,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Avatar,\n    Box,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    Grid,\n    Paper,\n    TextField,\n    Tooltip,\n    Typography\n} from \"@material-ui/core\";\nimport { useStyles } from \"./Menu\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport firebaseConfig, { auth, storage } from \"../firebase\";\nimport firebase from \"firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport brandLogo from \"../img/Brandlogo.svg\";\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction Signup() {\n    const classes = useStyles()\n\n    const [emptyValues, setEmptyValues] = useState({\n        firstName: false,\n        lastName: false,\n        email: false,\n        password: false,\n        passwordConfirm: false,\n        university: false,\n        privacyPolicy: false,\n    })\n\n    const [values, setValues] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n        university: \"\",\n        privacyPolicy: false,\n    })\n\n    const [pp, setPP] = useState(null)\n    const [ppFile, setPPFile] = useState(\"\")\n    let ppUrl = \"\";\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n        setEmptyValues({ ...emptyValues, [prop]: false });\n    }\n    const handleChangeCheckbox = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.checked });\n        setEmptyValues({ ...emptyValues, [prop]: false });\n    }\n\n    const handleChangeUni = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.innerHTML });\n    }\n\n\n    // generates random alphanumeric file name of length 25\n    const generateFileName = () => {\n        let fileName = '';\n        let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        let charactersLength = characters.length;\n        for (let i = 0; i < 25; i++) {\n            fileName += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return fileName;\n    }\n\n    //gets the file extension from the image name\n    const getFileExtension = (image) => {\n        let fileExtension = '';\n        for (let i = image.name.length; i > 0; i--) {\n            if (image.name.charAt(i) === '.') {\n                fileExtension = image.name.charAt(i) + fileExtension;\n                break;\n            } else {\n                fileExtension = image.name.charAt(i) + fileExtension;\n            }\n        }\n        return fileExtension;\n    }\n\n    async function uploadImage(image, firstImage, lastImage) {\n\n        let fileName = generateFileName();\n\n        let fileExtension = getFileExtension(image);\n\n        let storageRef = storage.ref('profilePictures/' + fileName + fileExtension);\n\n        return new Promise(function (resolve, reject) {\n            const uploadImg = storageRef.put(image);\n\n            uploadImg.on(\"state_changed\",\n                (snapshot) => {\n                    console.log(\"uploading\")\n                }, (error) => {\n                    return reject(error)\n                },\n                () => {\n                    return resolve(uploadImg)\n                }\n            );\n        }).then(async function (uploadImg) {\n            await uploadImg.ref.getDownloadURL().then(url => {\n                ppUrl = url\n            });\n        }\n        )\n\n\n    }\n\n    const [currentUser, setCurrentUser] = useState(null);\n    const handleSubmit = async () => {\n\n        let anyEmpty = false;\n\n        for (let i in values) {\n            if (values[i] === false || values[i] === \"\") {\n                setEmptyValues(prevState => ({ ...prevState, [i]: true }))\n                anyEmpty = true\n            }\n        }\n\n        if (anyEmpty) return;\n\n        try {\n            if ((values.email.includes(\".ac\") || values.email.includes(\".edu\") || values.email.includes(\"drept.unibuc.ro\")\n                || values.email.includes(\"utcluj.didatec.ro\"))) {\n                if (values.password === values.passwordConfirm) {\n                    const new_user = await firebaseConfig.auth().createUserWithEmailAndPassword(values.email, values.password);\n                    await auth.currentUser.updateProfile({ displayName: values.firstName + \" \" + values.lastName })\n                    if (pp != null) {\n                        await uploadImage(pp, true, true)\n                    }\n                    const userid = auth.currentUser.uid;\n                    const db = firebase.firestore();\n                    await db.collection('users').doc(userid).set({\n                        ID: userid,\n                        Name: values.firstName,\n                        LastName: values.lastName,\n                        University: values.university,\n                        chatsNo: 0,\n                        profilePicture: ppUrl,\n                    });\n                    if (new_user.user != null) {\n                        await new_user.user.sendEmailVerification();\n                        alert(\"Verification email sent.\");\n                    } else {\n                        alert('user null');\n                    }\n                    setCurrentUser(true);\n                } else {\n                    throw 'Passwords do not match';\n                }\n            } else {\n                throw 'Email is not a university email!';\n            }\n        } catch (error) {\n            alert(error);\n        }\n\n        firebaseConfig.auth().signOut();\n\n    };\n\n    if (currentUser) {\n        return <Redirect to=\"/menu\"></Redirect>\n    }\n\n    function handleChangeImage() {\n        const preview = document.getElementById(`profilePicture`)\n        const file = document.querySelector('input[type=file]').files[0]\n        const reader = new FileReader();\n\n        reader.addEventListener('load', function () {\n            setPPFile(reader.result);\n        }, false);\n\n        if (file && file.type.match('image.*')) {\n            reader.readAsDataURL(file)\n            setPP(file)\n        } else {\n            alert('Please only upload images');\n        }\n    }\n\n    return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" style={{ margin: 30 }}>\n            <Grid container variant=\"contained\">\n                <Paper style={{ margin: \"auto\" }}> {/*Need outline as we remove border in css*/}\n                    <Box p={3}>\n                        <Box display={\"flex\"} justifyContent={\"center\"}>\n                            <img src={brandLogo} alt=\"brand logo\" width={40} height={40} />\n                            <Typography variant=\"h2\" style={{ fontSize: \"35px\", marginLeft: \"10px\" }}>\n                                CampusComm\n                            </Typography>\n                        </Box>\n\n\n                        <Box style={{ margin: \"auto\", marginBottom: \"10px\" }}>\n                            <Box display=\"flex\" textAlign=\"center\" alignItems=\"center\" flexDirection={\"column\"}>\n                                <Button\n                                    id=\"upload_button\"\n                                    variant=\"text\"\n                                    component=\"label\"\n                                >\n                                    <input\n                                        id=\"upload-photo\"\n                                        name=\"upload-photo\"\n                                        type=\"file\"\n                                        hidden\n                                        onChange={() => {\n                                            handleChangeImage()\n                                        }}\n                                    />\n                                    <Box display=\"flex\" textAlign=\"center\" alignItems=\"center\" flexDirection={\"column\"}>\n                                        <Avatar alt=\"brand logo\" className={classes.uploadImage} id=\"profilePicture\"\n                                            src={ppFile} style={{ display: \"inline-block\" }} />\n                                        <Typography variant={\"body2\"} style={{\n                                            marginTop: \"-32px\",\n                                            marginBottom: \"15px\",\n                                            zIndex: 5,\n                                            color: \"#fafafa\",\n                                            display: \"inline-block\"\n                                        }}>\n                                            Edit\n                                        </Typography>\n                                    </Box>\n                                </Button>\n                            </Box>\n                        </Box>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <TextField\n                                    error={emptyValues.firstName}\n                                    fullWidth\n                                    required\n                                    value={values.firstName}\n                                    id=\"First-Name\"\n                                    label=\"First Name\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onChange={handleChange(\"firstName\")}\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextField\n                                    error={emptyValues.lastName}\n                                    fullWidth\n                                    required\n                                    value={values.lastName}\n                                    id=\"Last-Name\"\n                                    label=\"Last Name\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onChange={handleChange(\"lastName\")}\n                                />\n                            </Grid>\n                        </Grid>\n                        <TextField\n                            error={emptyValues.email}\n                            fullWidth\n                            required\n                            value={values.email}\n                            id=\"Email\"\n                            label=\"Academic Email Address\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            style={{ marginTop: 10 }}\n                            onChange={handleChange(\"email\")}\n                        />\n                        <TextField\n                            error={emptyValues.password}\n                            fullWidth\n                            required\n                            value={values.password}\n                            type=\"password\"\n                            id=\"Password\"\n                            label=\"Password\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            style={{ marginTop: 10 }}\n                            onChange={handleChange(\"password\")}\n                        />\n                        <TextField\n                            error={emptyValues.passwordConfirm}\n                            fullWidth\n                            required\n                            type=\"password\"\n                            value={values.passwordConfirm}\n                            id=\"Password-Confirm\"\n                            label=\"Re-enter Password\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            style={{ marginTop: 10 }}\n                            onChange={handleChange(\"passwordConfirm\")}\n                        />\n                        <Autocomplete\n                            id=\"University\"\n                            options={unis}\n                            getOptionLabel={(option) => option.name}\n                            style={{ marginTop: 10 }}\n                            renderInput={(params) =>\n                                <TextField {...params} label=\"University\" variant=\"outlined\"\n                                    required\n                                    error={emptyValues.university}\n                                    value={values.university}\n                                    onChange={handleChange(\"university\")} />}\n                            onChange={handleChangeUni(\"university\")}\n\n                        />\n                        <Box justifyContent=\"center\" alignItems=\"center\" style={{ marginTop: 10 }}>\n                            <Button variant=\"outlined\" color=\"primary\"\n                                onClick={() => {\n                                    handleSubmit()\n                                }}\n                            >\n                                Registrar\n                            </Button>\n                            <FormControlLabel\n                                control={<Checkbox color={\"primary\"} checked={values.privacyPolicy} onChange={handleChangeCheckbox(\"privacyPolicy\")} />}\n                                label={\n                                    <>\n                                        <Typography style={{ display: \"inLine\", marginRight: \"4px\" }} color={emptyValues.privacyPolicy ? \"error\" : \"textSecondary\"}>\n                                            Estoy de acuerdo con la\n                                        </Typography>\n                                        <Tooltip TransitionComponent={Zoom} title={\"By checking the box you agree to our terms and conditions regarding personal data collection in accordance to the General Data Protection Act. Our team will need your university email account and name. This data will be stored in order to ensure a safe environment for our users when interacting with each other. This data will not be publicly made anywhere else. Other users will have access (be able to see on the platform) your name but nothing else. The email will be available only to us. Please note that if you have any concerns regarding the data collected about yourself, or if you wish to see all data which has been collected about yourself, you can email us at pap36@bath.ac.uk . If you decide to delete your profile, all the data about you will be deleted, but you can also request this personally by mailing us at the above address. Finally, we will delete all data stored about you after the 30th of April 2021 (30.04.2021), unless you specifically ask us to by emailing the above address.\"} style={{ display: \"inLine\", textDecoration: 'underline' }}>\n                                            <Typography color={emptyValues.privacyPolicy ? \"error\" : \"textSecondary\"} >\n                                                politica de privacidad\n                                            </Typography>\n                                        </Tooltip>\n                                        <Typography style={{ display: \"inLine\", marginLeft: \"4px\" }} color={emptyValues.privacyPolicy ? \"error\" : \"textSecondary\"}>\n                                            *\n                                        </Typography>\n                                    </>\n                                }\n                                style={{ marginLeft: \"10px\" }}\n                                labelPlacement=\"end\"\n                            />\n                        </Box>\n                    </Box>\n                </Paper>\n            </Grid>\n        </Box>\n    )\n}\n\nconst unis = [\n    { name: \"Universidad de Córdoba\" },\n]\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}