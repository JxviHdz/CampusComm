{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hernandez\\\\Documents\\\\DOCUMENTOS UNIVERSIDAD\\\\INGENIERIA DE SOFTWARE\\\\CampusComm\\\\src\\\\Profile.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Profile.css';\nimport firebase from 'firebase/app';\nimport { useCollection, useCollectionData, useDocumentData } from 'react-firebase-hooks/firestore';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Avatar, Box, Button, Grid } from \"@material-ui/core\";\nimport HomeListingCard from \"./listingCard\";\nimport { makeStyles } from '@material-ui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firestore = firebase.firestore(); // TODO\n//  Table of all listings\n\nvar listings = [];\nvar docsID = [];\nvar profileID = null;\nvar matchedSeller = false;\nvar matchedBuyer = false;\nvar userID = null;\nvar currentName = null;\nvar alreadyLeftReviewSeller = false;\nvar alreadyLeftReviewBuyer = false;\nvar index = 0;\nvar offersSel = [];\nvar offersBuy = [];\nconst useStyles = makeStyles(theme => ({\n  profilePicture: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    border: \"0px solid black\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    width: \"185px\",\n    height: \"185px\",\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\n\nconst Profile = theme => {\n  _s();\n\n  const history = useHistory();\n  const [user] = useAuthState(auth);\n  const classes = useStyles();\n  const location = useLocation();\n  var currentUserID = null;\n  var targetName = null;\n  var targetUni = null;\n  var targetLastName = null;\n  var targetPP = null;\n\n  if (location.state) {\n    profileID = location.state.targetUserID;\n    currentUserID = location.state.currentUserID;\n  } else {\n    profileID = user.uid;\n    targetName = user.displayName;\n    targetLastName = \"\";\n  }\n\n  userID = user.uid; // Getting the listings from the database.\n\n  const listingsRef = firestore.collection('listings');\n  var userOffersSeller = firestore.collection('users/' + profileID + '/AcceptedOffers').where(\"buyerID\", \"==\", userID);\n  var userOffersBuyer = firestore.collection('users/' + userID + '/AcceptedOffers').where(\"buyerID\", \"==\", profileID);\n  var currentUser = firestore.collection('users').where(\"ID\", \"==\", currentUserID);\n  var targetUser = firestore.collection('users').where(\"ID\", \"==\", profileID);\n  var [target, loadingTarget] = useCollectionData(targetUser);\n\n  if (!loadingTarget) {\n    if (profileID != user.uid) {\n      target.forEach(usr => {\n        targetName = usr.Name;\n        targetUni = usr.University;\n        targetLastName = usr.LastName;\n        targetPP = usr.profilePicture;\n      });\n    }\n  }\n\n  let userDocRef = null;\n\n  if (user) {\n    //userID = profileID;\n    const usersRef = firestore.collection(\"users\");\n    userDocRef = usersRef.doc(profileID);\n  }\n\n  const [userDoc, loadingUserDoc] = useDocumentData(userDocRef);\n  var [current, loadingUser] = useCollectionData(currentUser);\n\n  if (!loadingUser) {\n    current.forEach(usr => {\n      currentName = usr.Name;\n\n      if (profileID === user.uid) {\n        targetName = usr.Name;\n        targetLastName = usr.LastName;\n        targetUni = usr.University;\n      }\n    });\n  }\n\n  const query = listingsRef.orderBy('createdAt', \"desc\"); // ordering by time\n  // retrieving them\n\n  var [result1, loadingOffer] = useCollectionData(userOffersSeller);\n  var [result2, loadingOfferB] = useCollectionData(userOffersBuyer);\n\n  if (!loadingOffer && result1) {\n    offersSel = result1;\n  }\n\n  if (!loadingOfferB && result2) {\n    offersBuy = result2;\n  }\n\n  matchedSeller = CheckMatchSeller(); // if true then seller accepted offer of current user\n\n  matchedBuyer = CheckMatchBuyer();\n  const [listingsBig, loading] = useCollection(query); // check if data is still being loaded\n\n  if (!loading) {\n    // make sure to take most recent posts\n    index = 0;\n    listings = [];\n    listingsBig.forEach(doc => {\n      var data = doc.data();\n\n      if (data.seller == profileID) {\n        listings[index] = doc.data();\n        docsID[index] = doc.id;\n        index++;\n      }\n    });\n  }\n\n  const getListingCard = (listingObj, iD) => {\n    let props = {\n      listingObj: listingObj,\n      iD: iD\n    };\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(HomeListingCard, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n  };\n\n  var displayInfo = userDoc && userDoc.Name + \" \" + userDoc.LastName;\n  var targetInfo = targetName + \" \" + targetLastName;\n  var uni = targetUni;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about\",\n      children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profilePicture,\n            alt: \"Profile Image\",\n            src: profileID === user.uid ? userDoc && userDoc.profilePicture : targetPP,\n            children: targetName ? targetName.charAt(0).toUpperCase() : \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: profileID === user.uid ? displayInfo : targetInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: uni\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [profileID === user.uid ? /*#__PURE__*/_jsxDEV(InterestedBuyers, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Puntuaci\\xF3n de revisi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DisplayReview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Deja una rese\\xF1a para este vendedor.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), matchedSeller ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(AddReview, {\n              option: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: profileID == user.uid ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: alreadyLeftReviewSeller == false ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"No puedes dejar una rese\\xF1a a menos que hagas una oferta y este usuario acepte \\xE9l.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Puedes dejar tantas rese\\xF1as como ofertas hayas realizado y que hayan sido aceptado.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Deja una rese\\xF1a para este comprador.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), matchedBuyer ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(AddReview, {\n              option: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: profileID == user.uid ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: alreadyLeftReviewBuyer == false ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"No puedes dejar una rese\\xF1a a menos que este usuario haga una oferta y t\\xFA la aceptes. \\xE9l.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Puedes dejar tantas rese\\xF1as como ofertas se hayan realizado y que desees. aceptado.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : history.push(\"/menu\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listings\",\n      children: user ? /*#__PURE__*/_jsxDEV(Box, {\n        p: 1,\n        m: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: 4,\n          children: listings.map((listingObj, index) => getListingCard(listingObj, docsID[index]))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"El usuario no tiene anuncios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"qyIPWM3Blgo1LOs10INl6zgUrNE=\", false, function () {\n  return [useHistory, useAuthState, useStyles, useLocation, useCollectionData, useDocumentData, useCollectionData, useCollectionData, useCollectionData, useCollection];\n});\n\n_c = Profile;\n\nfunction editProfile() {\n  alert(\"Button clicked\");\n}\n\nfunction CheckMatchSeller() {\n  _s2();\n\n  // Right now we are checing if there is at least one accepted offer with the current user\n  // However this means that infinite reviews can be left by that user\n  // We want to limit this to one review / sale\n  // We can match the number of reviews from userID with the number of accepted Offers where buyerID == userID\n  var salesDone = offersSel.length; // We need to count how many reviews this user (userID) left for profileID\n\n  var reviewRef = firestore.collection('reviewsForSellers').where(\"target\", \"==\", profileID).where(\"senderID\", \"==\", userID);\n  var [reviews, loading] = useCollectionData(reviewRef);\n  if (salesDone == 0) return false;\n\n  if (!loading) {\n    if (reviews.length != 0) alreadyLeftReviewSeller = true;\n    return reviews.length != salesDone;\n  }\n\n  return false;\n}\n\n_s2(CheckMatchSeller, \"FhHA+jQUVU185DP4vQGc6Ex0mUE=\", false, function () {\n  return [useCollectionData];\n});\n\n_c2 = CheckMatchSeller;\n\nfunction CheckMatchBuyer() {\n  _s3();\n\n  // Right now we are checing if there is at least one accepted offer with the current user\n  // However this means that infinite reviews can be left by that user\n  // We want to limit this to one review / sale\n  // We can match the number of reviews from userID with the number of accepted Offers where buyerID == userID\n  var salesDone = offersBuy.length; // We need to count how many reviews this user (userID) left for profileID\n\n  var reviewRef = firestore.collection('reviewsForBuyers').where(\"target\", \"==\", profileID).where(\"senderID\", \"==\", userID);\n  var [reviews, loading] = useCollectionData(reviewRef);\n  if (salesDone == 0) return false;\n\n  if (!loading) {\n    if (reviews.length != 0) alreadyLeftReviewBuyer = true;\n    return reviews.length != salesDone;\n  }\n\n  return false;\n}\n\n_s3(CheckMatchBuyer, \"FhHA+jQUVU185DP4vQGc6Ex0mUE=\", false, function () {\n  return [useCollectionData];\n});\n\n_c3 = CheckMatchBuyer;\n\nfunction getListings(user, listings) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: index ? listings.map((listing, index) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/DisplayProduct\",\n          state: [{\n            iD: docsID[index]\n          }]\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: listing.imgUrl,\n            className: \"productImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"productTitle\",\n            children: listing.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"productPrice\",\n            children: [\"Price: \\xA3\", listing.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 33\n          }, this)]\n        }, docsID[index].toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User has no listings. Sorry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\nfunction InterestedBuyers() {\n  _s4();\n\n  var [myListings, loading] = useCollection(firestore.collection('listings').where(\"seller\", \"==\", profileID));\n  var [users, loading2] = useCollectionData(firestore.collection('users'));\n  var myUsers = [];\n\n  if (!loading2) {\n    users.forEach(usr => {\n      myUsers[usr.ID] = usr.Name;\n    });\n  }\n\n  var mapping = [];\n\n  if (!loading) {\n    myListings.forEach(listing => {\n      var potentialBuyers = listing.data().interestedUsers.split(',');\n\n      if (potentialBuyers.length != 0 && !loading2) {\n        var buyersName = [];\n        potentialBuyers.forEach(buyer => {\n          if (buyer != \"\") {\n            buyersName.push({\n              name: myUsers[buyer],\n              id: buyer\n            });\n          }\n        });\n        mapping.push({\n          key: listing.data().name,\n          value: buyersName,\n          listingID: listing.id\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Estos son los usuarios interesados \\u200B\\u200Ben tus productos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mapping && mapping.map(maping => /*#__PURE__*/_jsxDEV(Buyers, {\n        name: maping.key,\n        buyers: maping.value,\n        listing: maping\n      }, maping.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 9\n  }, this);\n}\n\n_s4(InterestedBuyers, \"LHAJcw9+lHW3czyWNnVeY16yeaY=\", false, function () {\n  return [useCollection, useCollectionData];\n});\n\n_c4 = InterestedBuyers;\n\nfunction Buyers(props) {\n  var listingName = props.name;\n  var buyers = props.buyers;\n  var listingId = props.listing.listingID;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Interested in \", listingName, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: buyers.map(buyer => {\n        // When you send an offer (accept it), then all the other users interested should have their offers removed.\n        const SendOffer = () => {\n          var userOffers = firestore.collection('users/' + profileID + '/AcceptedOffers');\n          userOffers.add({\n            buyerID: buyer.id,\n            listingID: listingId\n          }); // need to remove those still interested in this listing.\n          // need to update the listing as being sold\n\n          var listingRef = firestore.collection('listings').doc(listingId);\n          var newVal = \"\";\n          listingRef.update({\n            interestedUsers: newVal,\n            sold: \"true\"\n          });\n        };\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/Profile\",\n                state: {\n                  targetUserID: buyer.id,\n                  currentUserID: userID\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: buyer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 27\n            }, this), \": \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: SendOffer,\n              children: \"Accept Offer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_c5 = Buyers;\n\nfunction DisplayReview() {\n  _s5();\n\n  var reviews = [];\n  var credibilityScoreBuyer = 0,\n      credibilityScoreSeller = 0;\n  const queryBuy = firestore.collection('reviewsForBuyers').where(\"target\", \"==\", profileID); // leaving reviews for those which buy\n\n  const querySel = firestore.collection('reviewsForSellers').where(\"target\", \"==\", profileID); // leaving reviews for those which sell\n\n  const [reviewsRefBuyer, loadingB] = useCollection(queryBuy);\n  const [reviewsRefSeller, loadingS] = useCollection(querySel);\n  var countBuy = [0, 0, 0, 0, 0];\n  var countSel = [0, 0, 0, 0, 0];\n  var index = 0;\n  var editable = [];\n  const [reviewDescription, setReviewDescription] = useState('');\n  const [stars, setStars] = useState('');\n\n  if (!loadingB && reviewsRefBuyer) {\n    reviewsRefBuyer.forEach(doc => {\n      reviews[index] = doc.data();\n      docsID[index] = doc.id;\n      editable[index] = false;\n      credibilityScoreBuyer += parseInt(reviews[index].stars);\n      countBuy[reviews[index].stars - 1] += 1;\n      index++;\n    });\n  }\n\n  var limit = index; // this marks the point where reviews as a buyer end and begin as a seller\n\n  if (!loadingS && reviewsRefSeller) {\n    reviewsRefSeller.forEach(doc => {\n      reviews[index] = doc.data();\n      docsID[index] = doc.id;\n      editable[index] = false;\n      credibilityScoreSeller += parseInt(reviews[index].stars);\n      countSel[reviews[index].stars - 1] += 1;\n      index++;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: credibilityScoreBuyer + credibilityScoreSeller != 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Credibility Score as buyer: \", limit != 0 ? credibilityScoreBuyer / limit : 0, \" ||| Credibility Score as seller: \", index - limit != 0 ? credibilityScoreSeller / (index - limit) : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 112\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"5 star reviews as buyer: \", countBuy[4], \" out of \", limit, \" ||| 5 star reviews as seller: \", countSel[4], \" out of \", index - limit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"4 star reviews as buyer: \", countBuy[3], \" out of \", limit, \" ||| 4 star reviews as seller: \", countSel[3], \" out of \", index - limit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"3 star reviews as buyer: \", countBuy[2], \" out of \", limit, \" ||| 3 star reviews as seller: \", countSel[2], \" out of \", index - limit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"2 star reviews as buyer: \", countBuy[1], \" out of \", limit, \" ||| 2 star reviews as seller: \", countSel[1], \" out of \", index - limit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"1 star reviews as buyer: \", countBuy[0], \" out of \", limit, \" ||| 1 star reviews as seller: \", countSel[0], \" out of \", index - limit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"No hay opiniones para este usuario.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reviews.map((review, index) => {\n        const editReview = () => {\n          editable[index] = true;\n          var path = \"\";\n          if (index < limit) path = \"reviewsForBuyers\";else path = \"reviewsForSellers\";\n          firestore.collection(path).doc(docsID[index]).update({\n            editable: \"true\"\n          });\n        };\n\n        const updateReview = e => {\n          e.preventDefault();\n          var path = \"\";\n          if (index < limit) path = \"reviewsForBuyers\";else path = \"reviewsForSellers\";\n          firestore.collection(path).doc(docsID[index]).update({\n            editable: \"false\",\n            reviewDescr: reviewDescription,\n            stars: stars\n          });\n          setReviewDescription(\"\");\n          setStars(\"\");\n        };\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review\",\n          children: [index == 0 && credibilityScoreBuyer != 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Rese\\xF1as como comprador\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 73\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), index == limit && credibilityScoreSeller != 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Rese\\xF1as como vendedor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 78\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Review test\",\n            children: [review.senderID != \"\" ? /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/Profile\",\n                state: {\n                  targetUserID: review.senderID,\n                  currentUserID: userID\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: review.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Deleted Account\"\n            }, void 0, false), \":\", review.editable == \"true\" && review.senderID == userID ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"reviewForm\",\n                onSubmit: updateReview,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Review text: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: review.reviewDescr,\n                  value: reviewDescription,\n                  onChange: e => setReviewDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Stars: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"5\",\n                  placeholder: review.stars,\n                  value: stars,\n                  onChange: e => setStars(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 63\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button\",\n                  type: \"submit\",\n                  children: \"Update review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 37\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [review.reviewDescr, \" - \", review.stars, \" stars \", review.senderID == userID ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: editReview,\n                  children: \"Edit review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 29\n          }, this)]\n        }, docsID[index].toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s5(DisplayReview, \"fWwdyy93WS6OUkyWFThYZMPP7kA=\", false, function () {\n  return [useCollection, useCollection];\n});\n\n_c6 = DisplayReview;\n\nfunction AddReview(option) {\n  _s6();\n\n  var value = option.option;\n  var path = \"\";\n  if (value == 0) path = \"reviewsForSellers\";else path = \"reviewsForBuyers\";\n  const reviewsRef = firestore.collection(path);\n  const [reviewDescription, setReviewDescription] = useState('');\n  const [stars, setStars] = useState(''); // Once a review is added, we should let that user only edit their review, but not leave any more (one review / sale)\n\n  const submitReview = async e => {\n    e.preventDefault();\n    reviewsRef.add({\n      reviewDescr: reviewDescription,\n      stars: stars,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      sender: currentName,\n      senderID: userID,\n      target: profileID,\n      editable: \"false\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"reviewForm\",\n    onSubmit: submitReview,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Review text: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: reviewDescription,\n      onChange: e => setReviewDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Stars: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      max: \"5\",\n      value: stars,\n      onChange: e => setStars(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      children: \"Submit review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 566,\n    columnNumber: 9\n  }, this);\n}\n\n_s6(AddReview, \"iYpd/rdQxW0r39eFgPNFmWu1qtw=\");\n\n_c7 = AddReview;\nexport default Profile;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"CheckMatchSeller\");\n$RefreshReg$(_c3, \"CheckMatchBuyer\");\n$RefreshReg$(_c4, \"InterestedBuyers\");\n$RefreshReg$(_c5, \"Buyers\");\n$RefreshReg$(_c6, \"DisplayReview\");\n$RefreshReg$(_c7, \"AddReview\");","map":{"version":3,"sources":["C:/Users/Hernandez/Documents/DOCUMENTOS UNIVERSIDAD/INGENIERIA DE SOFTWARE/CampusComm/src/Profile.js"],"names":["React","useState","firebase","useCollection","useCollectionData","useDocumentData","useAuthState","auth","Link","useHistory","useLocation","Avatar","Box","Button","Grid","HomeListingCard","makeStyles","firestore","listings","docsID","profileID","matchedSeller","matchedBuyer","userID","currentName","alreadyLeftReviewSeller","alreadyLeftReviewBuyer","index","offersSel","offersBuy","useStyles","theme","profilePicture","display","justifyContent","border","marginTop","marginBottom","width","height","backgroundColor","palette","secondary","main","Profile","history","user","classes","location","currentUserID","targetName","targetUni","targetLastName","targetPP","state","targetUserID","uid","displayName","listingsRef","collection","userOffersSeller","where","userOffersBuyer","currentUser","targetUser","target","loadingTarget","forEach","usr","Name","University","LastName","userDocRef","usersRef","doc","userDoc","loadingUserDoc","current","loadingUser","query","orderBy","result1","loadingOffer","result2","loadingOfferB","CheckMatchSeller","CheckMatchBuyer","listingsBig","loading","data","seller","id","getListingCard","listingObj","iD","props","displayInfo","targetInfo","uni","charAt","toUpperCase","push","map","editProfile","alert","salesDone","length","reviewRef","reviews","getListings","listing","pathname","imgUrl","name","price","toString","InterestedBuyers","myListings","users","loading2","myUsers","ID","mapping","potentialBuyers","interestedUsers","split","buyersName","buyer","key","value","listingID","maping","Buyers","listingName","buyers","listingId","SendOffer","userOffers","add","buyerID","listingRef","newVal","update","sold","DisplayReview","credibilityScoreBuyer","credibilityScoreSeller","queryBuy","querySel","reviewsRefBuyer","loadingB","reviewsRefSeller","loadingS","countBuy","countSel","editable","reviewDescription","setReviewDescription","stars","setStars","parseInt","limit","review","editReview","path","updateReview","e","preventDefault","reviewDescr","senderID","sender","AddReview","option","reviewsRef","submitReview","createdAt","FieldValue","serverTimestamp"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './Profile.css';\r\nimport firebase from 'firebase/app';\r\nimport {useCollection, useCollectionData, useDocumentData} from 'react-firebase-hooks/firestore';\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {auth} from \"./firebase\";\r\nimport {Link, useHistory, useLocation} from 'react-router-dom';\r\nimport {Avatar, Box, Button, Grid} from \"@material-ui/core\";\r\nimport HomeListingCard from \"./listingCard\";\r\nimport {makeStyles} from '@material-ui/styles';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\n// TODO\r\n//  Table of all listings\r\n\r\nvar listings = [];\r\nvar docsID = [];\r\nvar profileID = null;\r\nvar matchedSeller = false;\r\nvar matchedBuyer = false;\r\nvar userID = null;\r\nvar currentName = null;\r\nvar alreadyLeftReviewSeller = false;\r\nvar alreadyLeftReviewBuyer = false;\r\n\r\nvar index = 0;\r\nvar offersSel = [];\r\nvar offersBuy = [];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profilePicture: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        border: \"0px solid black\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"20px\",\r\n        width: \"185px\",\r\n        height: \"185px\",\r\n        backgroundColor: theme.palette.secondary.main\r\n    }\r\n}))\r\n\r\nconst Profile = (theme) => {\r\n    const history = useHistory();\r\n    const [user] = useAuthState(auth);\r\n    const classes = useStyles();\r\n\r\n    const location = useLocation();\r\n    var currentUserID = null;\r\n    var targetName = null;\r\n    var targetUni = null;\r\n    var targetLastName = null;\r\n    var targetPP = null;\r\n\r\n    if (location.state) {\r\n        profileID = location.state.targetUserID;\r\n        currentUserID = location.state.currentUserID;\r\n    } else {\r\n        profileID = user.uid;\r\n\r\n        targetName = user.displayName;\r\n        targetLastName = \"\";\r\n    }\r\n    userID = user.uid;\r\n    // Getting the listings from the database.\r\n    const listingsRef = firestore.collection('listings');\r\n    var userOffersSeller = firestore.collection('users/' + profileID + '/AcceptedOffers').where(\"buyerID\", \"==\", userID);\r\n    var userOffersBuyer = firestore.collection('users/' + userID + '/AcceptedOffers').where(\"buyerID\", \"==\", profileID);\r\n    var currentUser = firestore.collection('users').where(\"ID\", \"==\", currentUserID);\r\n    var targetUser = firestore.collection('users').where(\"ID\", \"==\", profileID);\r\n    var [target, loadingTarget] = useCollectionData(targetUser);\r\n    if (!loadingTarget) {\r\n        if (profileID != user.uid) {\r\n            target.forEach(usr => {\r\n                targetName = usr.Name;\r\n                targetUni = usr.University;\r\n                targetLastName = usr.LastName;\r\n                targetPP = usr.profilePicture\r\n            })\r\n        }\r\n    }\r\n\r\n    let userDocRef = null;\r\n    if (user) {\r\n        //userID = profileID;\r\n        const usersRef = firestore.collection(\"users\");\r\n        userDocRef = usersRef.doc(profileID)\r\n    }\r\n    const [userDoc, loadingUserDoc] = useDocumentData(userDocRef);\r\n\r\n    var [current, loadingUser] = useCollectionData(currentUser);\r\n    if (!loadingUser) {\r\n        current.forEach(usr => {\r\n            currentName = usr.Name;\r\n\r\n            if (profileID === user.uid) {\r\n                targetName = usr.Name;\r\n                targetLastName = usr.LastName;\r\n                targetUni = usr.University;\r\n            }\r\n        })\r\n    }\r\n    const query = listingsRef.orderBy('createdAt', \"desc\"); // ordering by time\r\n    // retrieving them\r\n\r\n    var [result1, loadingOffer] = useCollectionData(userOffersSeller);\r\n    var [result2, loadingOfferB] = useCollectionData(userOffersBuyer);\r\n    if (!loadingOffer && result1) {\r\n        offersSel = result1;\r\n    }\r\n    if (!loadingOfferB && result2) {\r\n        offersBuy = result2;\r\n    }\r\n    matchedSeller = CheckMatchSeller(); // if true then seller accepted offer of current user\r\n    matchedBuyer = CheckMatchBuyer();\r\n\r\n    const [listingsBig, loading] = useCollection(query);\r\n\r\n    // check if data is still being loaded\r\n    if (!loading) {\r\n        // make sure to take most recent posts\r\n        index = 0;\r\n        listings = [];\r\n        listingsBig.forEach(doc => {\r\n            var data = doc.data();\r\n            if (data.seller == profileID) {\r\n                listings[index] = doc.data();\r\n                docsID[index] = doc.id;\r\n                index++;\r\n            }\r\n        })\r\n    }\r\n\r\n    const getListingCard = (listingObj, iD) => {\r\n        let props = {\r\n            listingObj: listingObj,\r\n            iD: iD,\r\n        }\r\n\r\n        return (\r\n            <Grid item>\r\n                <HomeListingCard {...props} />\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    var displayInfo = userDoc && (userDoc.Name + \" \" + userDoc.LastName);\r\n    var targetInfo = targetName + \" \" + targetLastName\r\n    var uni = targetUni;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"about\">\r\n                {user ?\r\n                    <>\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Avatar className={classes.profilePicture} alt=\"Profile Image\" src={profileID === user.uid ? (userDoc && userDoc.profilePicture) : (targetPP)}>\r\n                            {targetName ? targetName.charAt(0).toUpperCase() : \"?\"}\r\n                        </Avatar>\r\n                        </Box>\r\n                        <h1>{profileID === user.uid ? displayInfo : targetInfo}</h1>\r\n                        <h1>{uni}</h1>\r\n                        <p>\r\n                            {profileID === user.uid ?\r\n                                <InterestedBuyers/>\r\n                                :\r\n                                <></>}\r\n                            <h1>Puntuación de revisión</h1>\r\n                            <DisplayReview/>\r\n                            <h1>Deja una reseña para este vendedor.</h1>\r\n                            {matchedSeller ?\r\n                                <div>\r\n                                    <AddReview option={0}></AddReview>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    {profileID == user.uid ?\r\n                                        <></>\r\n                                        :\r\n                                        <>{alreadyLeftReviewSeller == false ?\r\n                                            <h1>No puedes dejar una reseña a menos que hagas una oferta y este usuario acepte\r\n                                                él.</h1>\r\n                                            :\r\n                                            <h1>Puedes dejar tantas reseñas como ofertas hayas realizado y que hayan sido\r\n                                                aceptado.</h1>\r\n                                        }\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            <h1>Deja una reseña para este comprador.</h1>\r\n                            {matchedBuyer ?\r\n                                <div>\r\n                                    <AddReview option={1}></AddReview>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    {profileID == user.uid ?\r\n                                        <></>\r\n                                        :\r\n                                        <>{alreadyLeftReviewBuyer == false ?\r\n                                            <h1>No puedes dejar una reseña a menos que este usuario haga una oferta y tú la aceptes.\r\n                                                él.</h1>\r\n                                            :\r\n                                            <h1>Puedes dejar tantas reseñas como ofertas se hayan realizado y que desees.\r\n                                                aceptado.</h1>\r\n                                        }\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </p>\r\n                    </>\r\n                    :\r\n                    history.push(\"/menu\")\r\n                }\r\n            </div>\r\n\r\n            <div className=\"listings\">\r\n                {user ?\r\n                    <Box p={1} m={1}>\r\n                        <Grid container justify=\"center\" spacing={4}>\r\n                            {listings.map((listingObj, index) =>\r\n                                getListingCard(listingObj, docsID[index])\r\n                            )}\r\n                        </Grid>\r\n                    </Box>\r\n                    :\r\n                    <p>El usuario no tiene anuncios</p>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction editProfile(){\r\n    alert(\"Button clicked\");\r\n}\r\n\r\nfunction CheckMatchSeller()\r\n{\r\n    // Right now we are checing if there is at least one accepted offer with the current user\r\n    // However this means that infinite reviews can be left by that user\r\n    // We want to limit this to one review / sale\r\n    // We can match the number of reviews from userID with the number of accepted Offers where buyerID == userID\r\n    var salesDone = offersSel.length;\r\n    // We need to count how many reviews this user (userID) left for profileID\r\n    var reviewRef = firestore.collection('reviewsForSellers').where(\"target\", \"==\", profileID).where(\"senderID\", \"==\", userID);\r\n    var [reviews, loading] = useCollectionData(reviewRef);\r\n\r\n    if (salesDone == 0) return false;\r\n\r\n    if (!loading) {\r\n        if (reviews.length != 0) alreadyLeftReviewSeller = true;\r\n        return reviews.length != salesDone\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nfunction CheckMatchBuyer()\r\n{\r\n    // Right now we are checing if there is at least one accepted offer with the current user\r\n    // However this means that infinite reviews can be left by that user\r\n    // We want to limit this to one review / sale\r\n    // We can match the number of reviews from userID with the number of accepted Offers where buyerID == userID\r\n    var salesDone = offersBuy.length;\r\n    // We need to count how many reviews this user (userID) left for profileID\r\n    var reviewRef = firestore.collection('reviewsForBuyers').where(\"target\", \"==\", profileID).where(\"senderID\", \"==\", userID);\r\n    var [reviews, loading] = useCollectionData(reviewRef);\r\n\r\n    if (salesDone == 0) return false;\r\n\r\n    if (!loading) {\r\n        if (reviews.length != 0) alreadyLeftReviewBuyer = true;\r\n        return reviews.length != salesDone\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nfunction getListings(user, listings)\r\n{\r\n    return (\r\n        <>\r\n            {index ?\r\n                listings.map((listing, index) => {\r\n                    return (\r\n                        <Link to={{\r\n                            pathname: \"/DisplayProduct\",\r\n                            state: [{iD: docsID[index]}]\r\n                        }}>\r\n                            <div key={docsID[index].toString()} className=\"product\">\r\n                                <img src={listing.imgUrl} className='productImage'/>\r\n                                <p className='productTitle'>{listing.name}</p>\r\n                                <p className='productPrice'>Price: £{listing.price}</p>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })\r\n                :\r\n                <p>User has no listings. Sorry</p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nfunction InterestedBuyers()\r\n{\r\n\r\n    var [myListings, loading] = useCollection(firestore.collection('listings').where(\"seller\", \"==\", profileID));\r\n    var [users, loading2] = useCollectionData(firestore.collection('users'));\r\n    var myUsers = [];\r\n    if (!loading2) {\r\n        users.forEach(usr => {\r\n            myUsers[usr.ID] = usr.Name;\r\n        })\r\n    }\r\n    var mapping = [];\r\n    if (!loading) {\r\n        myListings.forEach(listing => {\r\n            var potentialBuyers = listing.data().interestedUsers.split(',');\r\n            if (potentialBuyers.length != 0 && !loading2) {\r\n                var buyersName = [];\r\n                potentialBuyers.forEach(buyer => {\r\n                    if (buyer != \"\") {\r\n                        buyersName.push({\r\n                            name: myUsers[buyer],\r\n                            id: buyer\r\n                        });\r\n                    }\r\n                });\r\n                mapping.push({\r\n                    key: listing.data().name,\r\n                    value: buyersName,\r\n                    listingID: listing.id\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Estos son los usuarios interesados ​​en tus productos.</h1>\r\n            <p>\r\n                {mapping && mapping.map(maping => <Buyers key={maping.key} name={maping.key} buyers={maping.value}\r\n                                                          listing={maping}></Buyers>)}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Buyers(props)\r\n{\r\n    var listingName = props.name;\r\n    var buyers = props.buyers;\r\n    var listingId = props.listing.listingID;\r\n\r\n\r\n    return (\r\n        <>\r\n            <p>Interested in {listingName}:</p>\r\n            <>{buyers.map(buyer => {\r\n\r\n                // When you send an offer (accept it), then all the other users interested should have their offers removed.\r\n                const SendOffer = () => {\r\n                    var userOffers = firestore.collection('users/' + profileID + '/AcceptedOffers');\r\n                    userOffers.add({\r\n                        buyerID: buyer.id,\r\n                        listingID: listingId\r\n                    })\r\n                    // need to remove those still interested in this listing.\r\n                    // need to update the listing as being sold\r\n                    var listingRef = firestore.collection('listings').doc(listingId);\r\n                    var newVal = \"\";\r\n                    listingRef.update({\r\n                        interestedUsers: newVal,\r\n                        sold: \"true\"\r\n                    })\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <><Link to={{\r\n                            pathname: \"/Profile\",\r\n                            state: {\r\n                                targetUserID: buyer.id,\r\n                                currentUserID: userID\r\n                            }\r\n                        }}>\r\n                            <button>{buyer.name}</button>\r\n                        </Link>: <button onClick={SendOffer}>Accept Offer</button></>\r\n                        <br/>\r\n                    </>\r\n                )\r\n            })}</>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction DisplayReview()\r\n{\r\n    var reviews = [];\r\n    var credibilityScoreBuyer = 0, credibilityScoreSeller = 0;\r\n    const queryBuy = firestore.collection('reviewsForBuyers').where(\"target\", \"==\", profileID); // leaving reviews for those which buy\r\n    const querySel = firestore.collection('reviewsForSellers').where(\"target\", \"==\", profileID); // leaving reviews for those which sell\r\n    const [reviewsRefBuyer, loadingB] = useCollection(queryBuy);\r\n    const [reviewsRefSeller, loadingS] = useCollection(querySel);\r\n    var countBuy = [0, 0, 0, 0, 0];\r\n    var countSel = [0, 0, 0, 0, 0];\r\n    var index = 0;\r\n    var editable = [];\r\n    const [reviewDescription, setReviewDescription] = useState('');\r\n    const [stars, setStars] = useState('');\r\n\r\n    if (!loadingB && reviewsRefBuyer) {\r\n        reviewsRefBuyer.forEach(doc => {\r\n            reviews[index] = doc.data();\r\n            docsID[index] = doc.id;\r\n            editable[index] = false;\r\n            credibilityScoreBuyer += parseInt(reviews[index].stars);\r\n            countBuy[reviews[index].stars - 1] += 1;\r\n            index++;\r\n        })\r\n    }\r\n    var limit = index // this marks the point where reviews as a buyer end and begin as a seller\r\n    if (!loadingS && reviewsRefSeller) {\r\n        reviewsRefSeller.forEach(doc => {\r\n            reviews[index] = doc.data();\r\n            docsID[index] = doc.id;\r\n            editable[index] = false;\r\n            credibilityScoreSeller += parseInt(reviews[index].stars);\r\n            countSel[reviews[index].stars - 1] += 1;\r\n            index++;\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <p>\r\n                {credibilityScoreBuyer + credibilityScoreSeller != 0 ?\r\n                    <>\r\n                        <label>Credibility Score as buyer: {limit != 0 ? credibilityScoreBuyer / limit : 0} |||\r\n                            Credibility Score as\r\n                            seller: {index - limit != 0 ? credibilityScoreSeller / (index - limit) : 0}</label><br/>\r\n                        <label>5 star reviews as buyer: {countBuy[4]} out of {limit} ||| 5 star reviews as\r\n                            seller: {countSel[4]} out of {index - limit}</label><br/>\r\n                        <label>4 star reviews as buyer: {countBuy[3]} out of {limit} ||| 4 star reviews as\r\n                            seller: {countSel[3]} out of {index - limit}</label><br/>\r\n                        <label>3 star reviews as buyer: {countBuy[2]} out of {limit} ||| 3 star reviews as\r\n                            seller: {countSel[2]} out of {index - limit}</label><br/>\r\n                        <label>2 star reviews as buyer: {countBuy[1]} out of {limit} ||| 2 star reviews as\r\n                            seller: {countSel[1]} out of {index - limit}</label><br/>\r\n                        <label>1 star reviews as buyer: {countBuy[0]} out of {limit} ||| 1 star reviews as\r\n                            seller: {countSel[0]} out of {index - limit}</label><br/>\r\n                    </>\r\n                    :\r\n                    <label>No hay opiniones para este usuario.</label>\r\n                }\r\n            </p>\r\n            <p>\r\n                {reviews.map((review, index) => {\r\n\r\n                    const editReview = () => {\r\n                        editable[index] = true;\r\n                        var path = \"\";\r\n                        if (index < limit) path = \"reviewsForBuyers\";\r\n                        else path = \"reviewsForSellers\";\r\n                        firestore.collection(path).doc(docsID[index]).update({\r\n                            editable: \"true\"\r\n                        })\r\n                    }\r\n\r\n                    const updateReview = (e) => {\r\n                        e.preventDefault();\r\n                        var path = \"\";\r\n                        if (index < limit) path = \"reviewsForBuyers\";\r\n                        else path = \"reviewsForSellers\";\r\n                        firestore.collection(path).doc(docsID[index]).update({\r\n                            editable: \"false\",\r\n                            reviewDescr: reviewDescription,\r\n                            stars: stars\r\n                        })\r\n                        setReviewDescription(\"\");\r\n                        setStars(\"\");\r\n                    }\r\n\r\n                    return (\r\n                        <div key={docsID[index].toString()} className=\"review\">\r\n                            {index == 0 && credibilityScoreBuyer != 0 ? <h1>Reseñas como comprador</h1> : <></>}\r\n                            {index == limit && credibilityScoreSeller != 0 ? <h1>Reseñas como vendedor</h1> : <></>}\r\n                            <p className='Review test'>{review.senderID != \"\"?\r\n                            <Link to={{\r\n                                pathname: \"/Profile\",\r\n                                state: {\r\n                                    targetUserID: review.senderID,\r\n                                    currentUserID: userID\r\n                                }\r\n                            }}>\r\n                                <button>{review.sender}</button>\r\n                            </Link>\r\n                            :\r\n                            <>Deleted Account</>\r\n                            }:{review.editable == \"true\" && review.senderID == userID?\r\n                                <>\r\n                                    <form className='reviewForm' onSubmit={updateReview}>\r\n                                        <label>Review text: </label><input type=\"text\" placeholder={review.reviewDescr}\r\n                                                                           value={reviewDescription}\r\n                                                                           onChange={(e) => setReviewDescription(e.target.value)}/>\r\n                                        <label>Stars: </label><input type=\"number\" min=\"1\" max=\"5\"\r\n                                                                     placeholder={review.stars} value={stars}\r\n                                                                     onChange={(e) => setStars(e.target.value)}/>\r\n                                        <button className='button' type=\"submit\">Update review</button>\r\n                                    </form>\r\n                                </>\r\n                                :\r\n                                <>{review.reviewDescr} - {review.stars} stars {\r\n                                    review.senderID == userID ?\r\n                                        <>\r\n                                            <button onClick={editReview}>Edit review</button>\r\n                                        </>\r\n                                        :\r\n                                        <></>\r\n                                }\r\n                                </>\r\n                            }\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction AddReview(option)\r\n{\r\n    var value = option.option;\r\n    var path = \"\";\r\n    if (value == 0) path = \"reviewsForSellers\";\r\n    else path = \"reviewsForBuyers\"\r\n    const reviewsRef = firestore.collection(path);\r\n    const [reviewDescription, setReviewDescription] = useState('');\r\n    const [stars, setStars] = useState('');\r\n\r\n\r\n    // Once a review is added, we should let that user only edit their review, but not leave any more (one review / sale)\r\n    const submitReview = async (e) => {\r\n        e.preventDefault();\r\n        reviewsRef.add({\r\n            reviewDescr: reviewDescription,\r\n            stars: stars,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            sender: currentName,\r\n            senderID: userID,\r\n            target: profileID,\r\n            editable: \"false\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form className='reviewForm' onSubmit={submitReview}>\r\n            <label>Review text: </label><input type=\"text\" value={reviewDescription}\r\n                                               onChange={(e) => setReviewDescription(e.target.value)}/>\r\n            <label>Stars: </label><input type=\"number\" min=\"1\" max=\"5\" value={stars}\r\n                                         onChange={(e) => setStars(e.target.value)}/>\r\n            <button className='button' type=\"submit\">Submit review</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}